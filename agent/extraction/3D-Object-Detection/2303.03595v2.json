{
    "meta_info": {
        "title": "LoGoNet: Towards Accurate 3D Object Detection with Local-to-Global  Cross-Modal Fusion",
        "abstract": "LiDAR-camera fusion methods have shown impressive performance in 3D object\ndetection. Recent advanced multi-modal methods mainly perform global fusion,\nwhere image features and point cloud features are fused across the whole scene.\nSuch practice lacks fine-grained region-level information, yielding suboptimal\nfusion performance. In this paper, we present the novel Local-to-Global fusion\nnetwork (LoGoNet), which performs LiDAR-camera fusion at both local and global\nlevels. Concretely, the Global Fusion (GoF) of LoGoNet is built upon previous\nliterature, while we exclusively use point centroids to more precisely\nrepresent the position of voxel features, thus achieving better cross-modal\nalignment. As to the Local Fusion (LoF), we first divide each proposal into\nuniform grids and then project these grid centers to the images. The image\nfeatures around the projected grid points are sampled to be fused with\nposition-decorated point cloud features, maximally utilizing the rich\ncontextual information around the proposals. The Feature Dynamic Aggregation\n(FDA) module is further proposed to achieve information interaction between\nthese locally and globally fused features, thus producing more informative\nmulti-modal features. Extensive experiments on both Waymo Open Dataset (WOD)\nand KITTI datasets show that LoGoNet outperforms all state-of-the-art 3D\ndetection methods. Notably, LoGoNet ranks 1st on Waymo 3D object detection\nleaderboard and obtains 81.02 mAPH (L2) detection performance. It is noteworthy\nthat, for the first time, the detection performance on three classes surpasses\n80 APH (L2) simultaneously. Code will be available at\n\\url{https://github.com/sankin97/LoGoNet}.",
        "author": "Xin Li, Tao Ma, Yuenan Hou, Botian Shi, Yuchen Yang, Youquan Liu, Xingjiao Wu, Qin Chen, Yikang Li, Yu Qiao, Liang He",
        "link": "http://arxiv.org/abs/2303.03595v2",
        "category": [
            "cs.CV"
        ],
        "additionl_info": "Accepted by CVPR2023"
    },
    "latex_extraction": {
        "content": {
            "section 1": {
                "name": "Introduction",
                "content": "\n\\label{sec:introduction}\n%////////////////////////////////\n\n\n3D object detection, which aims to localize and classify the objects in the 3D space, serves as an essential perception task and plays a key role in safety-critical autonomous driving~\\cite{huang2022multi,3ddet_survey,multi_survey}. LiDAR and cameras are two widely used sensors. Since LiDAR provides accurate depth and geometric information, a large number of methods~\\cite{centerpoint,pvrcnn,second,voxelnet,sessd,pointpillars} have been proposed and achieve competitive performance in various benchmarks. However, due to the inherent limitation of LiDAR sensors, point clouds are usually sparse and cannot provide sufficient context to distinguish between distant regions, thus causing suboptimal performance. \n\nTo boost the performance of 3D object detection, a natural remedy is to leverage rich semantic and texture information of images to complement the point cloud. As shown in Fig.~\\ref{fig:motivation} (a), recent advanced methods introduce the global fusion to enhance the point cloud with image features~\\cite{3dcvf,epnet,vff,autoalignv2,bevfusion,mv3d,avod,pointaugmenting,pointpainting,pircnn,catdet,focalsconv,transfusion,hmfi}. They typically fuse the point cloud features with image features across the whole scene. Although certain progress has been achieved, such practice lacks fine-grained local information. For 3D detection, foreground objects only account for a small percentage of the whole scene. Merely performing global fusion brings marginal gains. \n\nTo address the aforementioned problems, we propose a novel Local-to-Global fusion Network, termed~\\algorithmname, which performs LiDAR-camera fusion at both global and local levels, as shown in Fig.~\\ref{fig:motivation} (b). Our \\algorithmname~is comprised of three novel components, \\ie, Global Fusion (GoF), Local Fusion (LoF) and Feature Dynamic Aggregation (FDA).\nSpecifically, our GoF module is built on previous literature~\\cite{pointpainting,pointaugmenting,autoalignv2,hmfi,bevfusion} that fuse point cloud features and image features in the whole scene, where we use the point centroid to more accurately represent the position of each voxel feature, achieving better cross-modal alignment. And we use the global voxel features localized by point centroids to adaptively fuse image features through deformable cross-attention~\\cite{deformabledetr} and adopt the ROI pooling~\\cite{voxelrcnn,pvrcnn} to generate the ROI-grid features. \n\nTo provide more fine-grained region-level information for objects at different distances and retain the original position information within a much finer granularity, we propose the Local Fusion (LoF) module with the Position Information Encoder (PIE) to encode position information of the raw point cloud in the uniformly divided grids of each proposal and project the grid centers onto the image plane to sample image features. Then, we fuse sampled image features and the encoded local grid features through the cross-attention~\\cite{transformer} module.\n%\nTo achieve more information interaction between globally fused features and locally fused ROI-grid features for each proposal, we propose the FDA module through self-attention~\\cite{transformer} to generate more informative multi-modal features for second-stage refinement. \n\nOur \\algorithmname~achieves superior performance on two 3D detection benchmarks, \\ie, Waymo Open Dataset (WOD) and KITTI datasets. Notably, \\algorithmname~ranks \\textbf{1}st on Waymo 3D object detection leaderboard and obtains \\textbf{81.02} mAPH (L2) detection performance. Note that, for the first time, the detection performance on three classes surpasses 80 APH (L2) simultaneously.\n\nThe contributions of our work are summarized as follows:\n\\begin{itemize}\n\\item {We propose a novel local-to-global fusion network, termed \\algorithmname~, which performs LiDAR-camera fusion at both global and local levels.}\n\\item {Our \\algorithmname~is comprised of three novel components, \\ie, GoF, LoF and FDA modules. LoF provides fine-grained region-level information to complement GoF. FDA achieves information interaction between globally and locally fused features, producing more informative multi-modal features.}\n\\item {\\algorithmname~achieves state-of-the-art performance on WOD and KITTI datasets. Notably, our \\algorithmname~ranks 1st on Waymo 3D detection leaderboard with 81.02 mAPH (L2).}\n\\end{itemize}\n\n%////////////////////////////////\n"
            },
            "section 2": {
                "name": "Related Work",
                "content": "\n\\label{sec:relatedwork}\n%////////////////////////////////\n\n\n\\noindent \\textbf{Image-based 3D Detection:} Since cameras are much cheaper than the LiDAR sensors,\nmany researchers are devoted to performing 3D object detection by taking images as the sole input signal~\\cite{liga,mono3d++,liu2020smoke,pseudo++,lu2021geometry}. For image-based 3D object detection, since depth information is not directly accessible from images, some works~\\cite{caddn,lifteccv2020,pseudo++,pseudo} first conduct depth estimation to generate pseudo-LiDAR representations or lift 2D features into the 3D space, then perform object detection in the 3D space. Lately, some works have introduced transformer-based architectures~\\cite{transformer} to leverage 3D object queries and 3D-2D correspondence in the detection pipelines~\\cite{detr3d,petr,bevformer,monodtr}. Since estimating accurate depth information from images is extremely difficult, the performance of image-based methods is still inferior to the LiDAR-based approaches.\n\n\\noindent \\textbf{LiDAR-based 3D Detection:} According to the type of used point cloud representations, contemporary LiDAR-based approaches can be roughly divided into three categories: point-based, voxel-based, and point-voxel fusion methods. The point-based methods~\\cite{pointnet,pointnet++,pointrcnn,pointgnn} directly take raw point cloud as input and employ stacked Multi-Layer Perceptron (MLP) layers to extract point features. \nThese voxel-based approaches~\\cite{second,voxelnet,voxelrcnn,int,mppnet,lidarrcnn,pdv,pyramidrcnn} tend to convert the point cloud into voxels and utilize 3D sparse convolution layers to extract voxel features. Several recent works~\\cite{votr,voxelsettransformer,ct3d,fan2022embracing} have introduced the transformer~\\cite{transformer} to capture long-range relationships between voxels. The point-voxel fusion methods~\\cite{pvrcnn,lidarrcnn,std,he2020structure} utilize both voxel-based and point-based backbones~\\cite{pointnet,pointnet++} to extract features from different representations of the point cloud.\n\n\\noindent \\textbf{Multi-modal 3D Detection:} Multi-modal fusion has emerged as a promising direction as it leverages the merits of both images and point cloud. AVOD~\\cite{avod}, MV3D~\\cite{mv3d} and F-Pointnet~\\cite{qi2018frustum} are the pioneering proposal-level fusion works that perform the feature extraction of two modalities independently and simply concatenate multi-modal features via 2D and 3D RoI directly. CLOCs~\\cite{clocs} directly combine the detection results from the pre-trained 2D and 3D detectors without integrating the features. They maintain instance semantic consistency in cross-modal fusion, while suffering from coarse feature aggregation and interaction. Since then, increasing attention has been paid to globally enhancing point cloud features through cross-modal fusion. Point decoration approaches~\\cite{pointaugmenting,pointpainting,pircnn} augment each LiDAR point with the semantic scores or image features extracted from the pre-trained segmentation network. 3D-CVF~\\cite{3dcvf} and EPNet~\\cite{epnet} explore cross-modal feature fusion with a learned calibration matrix.\nRecent studies~\\cite{bevfusion,vff,hmfi,uvtr} have explored global fusion in the shared representation space based on the view transformation in the same way~\\cite{lifteccv2020}. These methods are less effective in exploiting the spatial cues of point cloud, and potentially compromise the quality of camera bird’s-eye view (BEV) representation and cross-modal alignment. Besides, many concurrent approaches~\\cite{autoalignv2,deepfusion,catdet,transfuser} introduce the cross-attention~\\cite{transformer} module to adaptively align and fuse point cloud features with image features through the learned offset matrices. In this work, we propose the local-to-global cross-modal fusion method in the two-stage refinement stage to further boost the performance.\n%////////////////////////////////\n"
            },
            "section 3": {
                "name": "Methodology",
                "content": "\n\\label{sec:methodology}\n%////////////////////////////////\n",
                "subsection 3.1": {
                    "name": "Framework overview",
                    "content": " \n\nAs illustrated in Fig. \\ref{fig:framework}, the inputs to \\algorithmname~are the point cloud and its associated multi-camera images which are defined as a set of 3D points $P = \\{{(x_i, y_i, z_i)|f_{i}\\}}_{i=1}^N$ and $I = \\{ I_j{\\in \\mathbb{R}^{{H_I} \\times {W_I} \\times 3}}\\}_{j=1}^T$ from $T$ cameras, respectively. Here, $(x_i, y_i, z_i)$ is the spatial coordinate of $i$-th point, $f_{i} \\in \\mathbb{R}^{C_p}$ are additional features containing the intensity or elongation of each point, $N$ is the number of points in the point cloud, $H_I$ and $W_I$ are the height and width of the input image, respectively.\n\n%\nFor the point cloud branch, given the input point cloud, we use a 3D voxel-based backbone~\\cite{voxelnet, second} to produce 1$\\times$, 2$\\times$, 4$\\times$ and 8$\\times$ downsampled voxel features $F_V \\in \\mathbb{R}^{X \\times Y \\times Z\\times C_V}$, where the C$_V$ is the number of channels of each voxel feature and (X, Y, Z) is the grid size of each voxel layer. Then, we use a region proposal network~\\cite{centerpoint,second} to generate initial bounding box proposals $B=\\{B_1, B_2, ..., B_n\\}$ from the extracted hierarchical voxel features. As to the image branch, the original multi-camera images are processed by a 2D detector~\\cite{fasterrcnn,swintransformer} to produce the dense semantic image features $F_I \\in  \\mathbb{R} ^ {\\frac{H_I}{4} \\times\\frac{W_I}{4} \\times C_I}$, where C$_I$ is the number of channels of image features. Finally, we apply local-to-global cross-modal fusion to the two-stage refinement, where multi-level voxel features $F_V$, image features $F_I$ and local position information derived from the raw point cloud are adaptively fused. \n\nOur local-to-global fusion method is mainly comprised of Global Fusion (GoF), Local Fusion (LoF) and Feature Dynamic Aggregation modules (FDA). In the following sections, we will have a detailed explanation of these modules.\n\n"
                },
                "subsection 3.2": {
                    "name": "Global Fusion Module",
                    "content": "\nPrevious global fusion methods~\\cite{pointaugmenting,pointpainting,autoalignv2,3dcvf,epnet,deepfusion,hmfi,focalsconv} typically use the voxel center to represent the position of each voxel feature. However, such a practice inevitably ignores the actual distribution of points within each voxel. As observed by KPConv and PDV~\\cite{kpconv,pdv}, voxel point centroids are much closer to the object’s scanned surface. They provide the original geometric shape information and scale to large-scale point cloud more efficiently. Therefore, we design the Centroid Dynamic Fusion (CDF) module to adaptively fuse point cloud features with image features in the global voxel feature space. And we utilize these voxel point centroids to represent the spatial position of non-empty voxel features. And these voxel features as well as their associated image features are fused adaptively by the deformable cross attention module~\\cite{transformer,deformabledetr}, as shown in Fig.~\\ref{fig:gof}.\n\n\n\nMore formally, given the set of non-empty voxel features $F_{V} = \\{V_i,f_{{V_i}}\\}_{i=1}^{N_{V}}$ and the image features $F_I$, where $V_i$ is the voxel index, $f_{V_i} \\in \\mathbb{R}^{C_V}$ is the non-empty voxel feature vector and $N_{V}$ is the number of non-empty voxels. The point centroid $c_i$ of each voxel feature $f_{V_i}$ is then calculated by averaging the spatial positions of all points within the same voxel $V_i$:\n\\begin{equation}\nc_i = \\frac{1}{{\\left| \\mathcal{P}(V_i) \\right|}}\\sum\\limits_{{p_i} \\in \\mathcal{P}(V_i)} {{p_i}},\n\\end{equation}\nwhere $p_i = (x_i,y_i,z_i)$ is the spatial coordinate and $\\left| \\mathcal{P}(V_i) \\right|$ is the number of points within the voxel $V_i$.\n\nNext, we follow~\\cite{pdv,kpconv} to assign a voxel grid index to each calculated voxel point centroid and match the associated voxel feature through the hash table. Then, we compute the reference point $\\textbf{p}_i$ in the image plane from each calculated voxel point centroid $c_i$ using the camera projection matrix $\\mathcal{M}$:\n\\begin{equation}\n\\textbf{p}_i = \\mathcal{M} \\cdot c_i,\n\\label{eqn:refp}\n\\end{equation}\nwhere $\\mathcal{M}$ is the product of the camera intrinsic matrix and the extrinsic matrix, and operation \\textbf{$\\cdot$} is matrix multiplication.\n\nBased on the reference points, we generate the aggregated image features ${\\hat F_I^i}$ by weighting a set of image features $F_I^k$ around the reference points, which are produced by applying the learned offsets to image features $F_I$. We denote each voxel feature as \\textbf{Query} $Q_i$, and the sampled features ${\\hat F_I^i}$ as the \\textbf{Key} and \\textbf{Value}. The whole centroid dynamic fusion process is formulated as:\n\\begin{equation}\n\\begin{array}{cc}\n{{F}_I^{k}} = {F_I}({{\\bf{p}}_i} + \\Delta {{\\bf{p}}_{mik}}),\\\\\n\\mathrm{CDF}({Q_i},{{\\hat F}_I^i}) = \\sum\\limits_{m = 1}^M {{W_m}} \\left[ \\sum\\limits_{k = 1}^K {{A_{mik}}\\cdot(W_m^{'}{F_I^{k}})} \\right],\n\\end{array}\n\\label{eqn:dca}\n\\end{equation}\nwhere $W_m$ and $W_m^{'}$ are the learnable weights, $M$ is the number of self-attention heads and $K$ is the total number of sampled points. $\\Delta {{\\bf{p}}_{mik}}$ and $A_{mik}$ denote the sampling offset and attention weight of the\n$k$-th sampling point in the $m$-th attention head, respectively. Both of them are obtained via the linear projection over the query feature $Q_i$. We concatenate the image-enhanced voxel features and the original voxel features to acquire the fused voxel features $\\hat F_V^* \\in \\mathbb{R}^{N \\times2C_V}$. Then, we adopt a FFN on $\\hat F_V^*$\nto reduce the number of channels and obtain the final fused feature $F_V^* \\in \\mathbb{R}^{N \\times C_V}$ from the CDF module, where FFN denotes a feed-forward network. Finally, we perform the ROI pooling~\\cite{pdv,voxelrcnn} on $F_V^*$ to generate proposal features $F_B^g$ for the subsequent proposal refinement.\n\n\n\n"
                },
                "subsection 3.3": {
                    "name": "Local Fusion Module",
                    "content": "\nTo provide more local and fine-grained geometric information during multi-modal fusion, we propose the Local Fusion (LoF) module with Grid point Dynamic Fusion (GDF) that dynamically fuses the point cloud features with image features at the proposal level.\n\nSpecifically, given each bounding box proposal $B_i$, we divide it into $u\\times u \\times u$ regular voxel grids $G_j$, where $j$ indexes the voxel grid. The center point $z_j$ is taken as the grid point of the corresponding voxel grid $G_j$. Firstly, we use a Position Information Encoder (PIE) to encode associated position information and generate each grid feature $F_G^j$ for each bounding box proposal. The grid of each proposal is processed by PIE and gets a local grid-ROI feature $F_B^p = \\{F_G^1, F_G^2, ... F_G^{u^{3}}\\}$. The PIE for each grid feature $F_G^j$ is then calculated as: \n\\begin{equation}\n    F_G^j = \\mathrm{MLP}(\\gamma, c_B, \\log(\\left|N_{G_j} \\right|+\\tau)),\n\\end{equation}\nwhere $\\gamma = z_j-c_B$ is the relative position of each grid from the bounding box proposal centroid $c_B$, $|N_{G_j}|$ is the number of points in each voxel grid $G_j$ and $\\tau$ is a constant offset. This information in each grid provides the basis for building fine-grained cross-modal fusion in region proposals.\n\nIn addition to using the position information of raw point cloud within each voxel grid, we also propose a Grid Dynamic Fusion (GDF) module that enables the model to absorb associated image features into the local proposal adaptively with these encoded local ROI-grid features $F_B^p$. Next, we project each center point $z_j$ of grid point $G$ onto the multi-view image plane similar to the GoF module and obtain several reference points $O \\in \\mathbb{R}^{u^3}$ for each box proposal to sample image features for local multi-modal feature fusion. And we use cross-attention to fuse the locally sampled image features and the encoded local ROI-grid feature $F_B^p$. The query feature $\\textbf{Q}$ is generated from the ROI-grid feature $F_B^p$ with encoded position information of local raw point cloud, the key and value features $ \\textbf{K}, \\textbf{V}$ are the image features $F_I$ that are sampled by reference points and their dynamic offsets with the same operations as Eqn.~\\ref{eqn:dca}. Then, we concatenate the image-enhanced local grid features and original local grid features to obtain fused grid features $\\hat F_B^l$. Finally, we employ a FFN on $\\hat F_B^l$ to reduce the number of channels and produce the final fused ROI-grid feature $F_B^l$.\n\n"
                },
                "subsection 3.4": {
                    "name": "Feature Dynamic Aggregation Module",
                    "content": "\n\nAfter the LoF, GoF and PIE modules, we obtain three features, \\ie, $F_B^p$, $F_B^l$ and $F_B^g$. These features are independently produced and have less information interaction and aggregation. %between different grid points. \n%\nTherefore, we propose the Feature Dynamic Aggregation (FDA) module which introduces the self-attention~\\cite{transformer} to build relationships between different grid points adaptively. Concretely, we first obtain the aggregated feature $F_S$ for all encoded grid points in each bounding box proposal as Eqn.~\\ref{eqn:sumfeature}:\n\\begin{equation}\n\\label{eqn:sumfeature}\nF_S = F_B^p+F_B^l+F_B^g.\n\\end{equation}\nThen, a self-attention module is introduced to build interaction between the non-empty grid point features with a standard transformer encoder layer~\\cite{transformer} and Residual Connection Block (RCB), as shown in Fig.~\\ref {fig:fda}. Finally, we use the shared flattened features generated from the FDA module to refine the bounding boxes.\n\n\n\n"
                },
                "subsection 3.5": {
                    "name": "Training Losses",
                    "content": "\n\nIn \\algorithmname, the weights of the image branch are frozen and only the LiDAR branch is trained. The overall training loss $\\mathcal L$ consists of the RPN loss $\\mathcal L_{\\mathrm{RPN}}$, the confidence prediction loss $\\mathcal L_{\\mathrm{conf}}$ and the box regression loss $\\mathcal L_{\\mathrm{reg}}$:\n\\begin{equation}\n \\mathcal {L}=\\mathcal {L}_{\\mathrm{RPN}} + \\mathcal {L}_{\\mathrm{conf}}+ \\alpha \\mathcal {L}_{\\mathrm{reg}},\n \\label {eq:loss}\n\\end{equation}\nwhere $\\alpha$ is the hyper-parameter for balancing different losses and is set as 1 in our experiment. We follow the training settings in~\\cite{centerpoint,voxelrcnn} to optimize the whole network.\n\n%////////////////////////////////\n"
                }
            },
            "section 4": {
                "name": "Experiments",
                "content": "\n\\label{sec:experiments}\n%////////////////////////////////\n%!TEX root = ../egpaper_for_review.tex\n\n\n\n\\noindent \\textbf{Datasets.} Following the practice of popular 3D detection models, we conduct experiments on the WOD~\\cite{waymo} and the KITTI~\\cite{kitti} benchmarks. The WOD dataset is one of the largest and most diverse autonomous driving datasets, containing 798 training sequences, 202 validation sequences and 150 testing sequences. Each sequence has approximately 200 frames and each point cloud has five RGB images. We evaluate the performance of different models using the official metrics, \\ie, Average Precision (AP) and Average Precision weighted by Heading (APH), and report the results on both LEVEL 1 (L1) and LEVEL 2 (L2) difficulty levels. The LEVEL 1 evaluation only includes 3D labels with more than five LiDAR points and LEVEL 2 evaluation includes 3D labels with at least one LiDAR point. Note that mAPH (L2) is the main metric for ranking in the Waymo 3D detection challenge. As to the KITTI dataset, it contains 7, 481 training samples and 7, 518 testing samples, and uses standard average precision (AP) on easy, moderate and hard levels. We follow~\\cite{chen20153d} to adopt the standard dataset partition in our experiments.\n\n\n\\noindent \\textbf{Settings.} For the WOD dataset~\\cite{waymo}, the detection range is [-75.2m, 75.2m] for the X and Y axes, and [-2m, 4m] for the Z axis. We divide the raw point cloud into voxels of size (0.1m, 0.1m, 0.15m). Since the KITTI dataset~\\cite{kitti} only provides annotations in front camera’s field of view, we set the point cloud range to be [0, 70.4m] for the X axis, [-40m, 40m] for the Y axis, and [-3m, 1m] for the Z axis. We set the voxel size to be (0.05m, 0.05m, 0.1m). We set the number of attention heads $M$ as 4 and the number of sampled points $K$ as 4. GoF module uses the last two voxel layers of the 3D backbone to fuse voxel features and image features. Following~\\cite{voxelrcnn,pvrcnn,pdv}, the grid size $u$ of GoF and LoF module is set as 6. The self-attention module in FDA module only uses one transformer encoder layer with a single attention head. We select CenterPoint~\\cite{centerpoint} and Voxel-RCNN~\\cite{voxelrcnn} as backbones for the WOD and KITTI datasets, respectively. For the image branch, we use Swin-Tiny~\\cite{swintransformer} and FPN~\\cite{fpn} as the backbone and initialize it from the public detection model. To save the computation cost, we rescale images to 1/2 of their original size and freeze the weights of the image branch during training. The number of channels of the output image features will be reduced to 64 by the feature reduction layer. We adopt commonly used data augmentation strategies, including random flipping, global scaling with scaling factor $\\left[0.95, 1.05\\right]$ and global rotations about the Z axis between $\\left[-\\frac{1}{4}\\pi,\\frac{1}{4}\\pi\\right]$. For post-processing, we adopt NMS with the threshold of 0.7 for WOD and 0.55 for KITTI to remove redundant boxes.\n\\\\\n\\\\\n\\noindent \\textbf{Training details.} For WOD, we adopt the two-stage training strategy. We first follow the official training strategy to train the single-stage detector~\\cite{centerpoint} for 20 epochs. Then, in the second stage, the whole \\algorithmname~is trained for 6 epochs. Batch size is set as 8 per GPU and we do not use GT sampling~\\cite{second} data augmentation. As for the KITTI dataset, we follow~\\cite{second} to train the whole model for 80 epochs. Batch size is set as 2 per GPU and we use the multi-modal GT sampling~\\cite{focalsconv,vff} during training.\n\n\n\n",
                "subsection 4.1": {
                    "name": "Results",
                    "content": "\n\n\\noindent \\textbf{Waymo.} We summarize the performance of \\algorithmname~and state-of-the-art 3D detection methods on WOD $val$ and $test$ sets in Table~\\ref{tab:waymotest} and Table ~\\ref{tab:waymoval}. As shown in Table~\\ref{tab:waymotest}, \\algorithmname~achieves the best results on Waymo 3D detection challenge. Specifically, \\algorithmname\\_Ens obtains 81.02 mAPH (L2) detection performance. Note that this is the first time for a 3D detector to achieve performance over 80 APH (L2) on vehicle, pedestrian, and cyclist simultaneously. And \\algorithmname\\_Ens surpasses 1.05 mAPH (L2) compared with previous state-of-the-art method BEVFusion\\_TTA~\\cite{bevfusion}. In addition, we also report performance without using test-time augmentations and model ensemble. \\algorithmname~achieves 77.10 mAPH (L2) and outperforms all competing non-ensembled methods~\\cite{centerformer, bevfusion,mppnet} on the\nleaderboard at the time of submission. Especially, \\algorithmname~is 0.77\\% higher than the multi-modal method BEVFusion~\\cite{bevfusion} and 1.43\\% higher than the LiDAR-only method MPPNet~\\cite{mppnet} with 16-frame on mAPH (L2) of three classes.\n\nWe also compare different methods on the $val$ set in Table~\\ref{tab:waymoval}. \\algorithmname~significantly outperforms existing methods, strongly demonstrating the effectiveness of our approach. In addition, we also provide the detailed performance of \\algorithmname~with multi-frame input. Our method still has advantages over both single-frame and multi-frame methods on mAPH (L2). Specifically, \\algorithmname~with 3-frame input can surpass the competitive MPPNet~\\cite{mppnet} with 16-frame, and \\algorithmname~with 5-frame surpasses MPPNet by 0.69\\% in terms of mAPH (L2).\n\n\\noindent \\textbf{KITTI.} Table~\\ref{tab:kitti} shows the results on the KITTI $val$ set. Our \\algorithmname~achieves state-of-the-art multi-class results. Our multi-modal network surpasses the LiDAR-only method PDV~\\cite{pdv} 1.47\\% mAP and recent multi-modal method VFF~\\cite{vff}. \nThe performance comparison on KITTI $test$ set is reported on Table~\\ref{tab:kittitest}. Compared with previous methods, \\algorithmname~achieves the state-of-the-art mAP performance at three difficulty levels on car and cyclist. \nNotably, for the first time, \\algorithmname~outperforms existing LiDAR-only methods by a large margin on both car and cyclist, and surpasses the recent multi-modal method SFD~\\cite{sfd} method 1.07\\% mAP on the car.\nBesides, \\algorithmname~ranks \\textbf{1}st in many cases, particularly for the hard level both in the $val$ and $test$ set. At the hard level, there are many small and distant objects or extreme occlusions that require multi-modal information to detect them accurately, which is fully explored by the local-to-global cross-modal fusion structures of \\algorithmname.\n\nIn addition, we report the performance gains brought by the proposed local-to-global fusion on different backbones~\\cite{voxelrcnn,centerpoint}. As shown in Table~\\ref{tab:waymoval} and Table~\\ref{tab:kitti}, on WOD, the proposed local-to-global fusion improves 3D mAPH (L2) performance by +0.81\\%, +2.93\\%, and +2.25\\% on vehicle, pedestrian and cyclist, respectively. For KITTI, the proposed fusion method can bring +0.70\\%, +4.83\\%, and +3.66\\% performance gains in mAP on car, pedestrian, and cyclist, respectively. These results strongly demonstrate the effectiveness and generalizability of the proposed local-to-global fusion method.\n\n\n\n\n\n\n"
                },
                "subsection 4.2": {
                    "name": "Ablation studies",
                    "content": "\n\nWe perform ablation studies to verify the effect of each component, different fusion variants on the final performance. All models are trained on 20\\% of the WOD training set and the evaluation is conducted in Waymo full validation set.\n\n\\noindent \\textbf{Effect of each component.}\nAs shown in Table~\\ref{tab:ablationstudy}. Firstly, we follow the single-modal refinement module~\\cite{voxelrcnn} and report its performance for fair comparison with \\algorithmname. The GoF module brings performance gain of 0.97\\%, 1.68\\% and 0.97\\%. The voxel point centroids are much closer to the object’s scanned surface, voxel point centroids can provide the original geometric shape information in cross-modal fusion.\n%\nAnd the LoF module brings an improvement of +1.22\\%, +2.93\\%, and +1.50\\% for the vehicle, pedestrian and cyclist, respectively. It can provide the local location and geometric information from the raw point cloud for each proposal and dynamically fuse associated image features to generate better multi-modal features for refinement. We first simply combine the GoF and LoF in our experiments, and we find that the performance gain is so limited even bring a small drop in cyclist. %Therefore, we introduce the feature dynamic aggregation (FDA) with a self-attention module to unify the GoF and LoF modules, which captures dependencies between all grids in each proposal and better integrates these ROI-grid features. \nThe FDA module brings a performance gain of 0.55\\%, 0.25\\% and 0.46\\% APH (L2) for the vehicle, pedestrian and cyclist, respectively.\nFinally, we report that all three components in \\algorithmname~surpass single-modal RCNN-only module performance of 1.85\\%, 3.19\\% and 1.63\\%  on APH (L2) for each class.\n\n\n\n\\noindent \\textbf{Type of Position Information for LoF.}\nTable~\\ref{tab:infotype} shows the effect of position information composition in local fusion. This information in each grid is encoded by the MLP to generate grid features and fuse local image features. We find that richer grid information brings performance gain of 0.12\\%, 0.28\\%, and 0.15\\% on APH (L2) on the vehicle, pedestrian, and cyclist, respectively.\n\n\n\n\n%////////////////////////////////\n"
                }
            },
            "section 5": {
                "name": "Conclusion",
                "content": "\n\\label{sec:conclusion}\n%////////////////////////////////\nIn this paper, we propose a novel multi-modal network, called \\algorithmname~, with the local-to-global cross-modal feature fusion to deeply integrate point cloud features and image features and provide richer information for accurate detection. Extensive experiments are conducted on WOD and KITTI datasets, \\algorithmname~surpasses previous methods on both benchmarks and achieves the first place on the Waymo 3D detection leaderboard. The impressive performance strongly demonstrates the effectiveness and generalizability of the proposed framework.\n\n\n\\noindent{\\bf Acknowledgments.} This work was supported by the National Innovation 2030 Major S\\&T Project of China (No. 2020AAA0104200 \\& 2020AAA0104205) and the Science and Technology Commission of Shanghai Municipality (No. 22DZ1100102). The computation is also performed in ECNU Multifunctional Platform for Innovation (001).\n% \\clearpage\n%%%%%%%%% REFERENCES\n{\\small\n\\bibliographystyle{ieee_fullname}\n}\n\n"
            }
        },
        "tables": {
            "tab:waymotest": "\\begin{table*}[]\n\\caption{Performance comparison on the Waymo 3D detection leaderboard. L and I represent the LiDAR point cloud and images, respectively. $\\dagger$ means these entries use the test time augmentations and model ensemble.}\n\\scalebox{0.77}{\n\\begin{tabular}{l|c|c|c|cc|cc|cc}\n\\hline\\hline\n\\multirow{2}{*}{Method} & \\multirow{2}{*}{Ranks} & \\multirow{2}{*}{Modality} & ALL (mAPH)   & \\multicolumn{2}{c|}{VEH (AP/APH)}        & \\multicolumn{2}{c|}{PED (AP/APH)}        & \\multicolumn{2}{c}{CYC (AP/APH)}         \\\\ \\cline{4-10} \n                    &                         &                           & L2             & L1                   & L2                   & L1                   & L2                   & L1                   & L2                   \\\\ \\hline\nLoGoNet\\_Ens$^\\dagger$  (Ours)          & 1            & L+I                        & \\textbf{81.02}         &    \\textbf{88.33}/\\textbf{87.87}       &   \\textbf{82.17}/\\textbf{81.72}      &  \\textbf{88.98}/\\textbf{85.96}     &   \\textbf{84.27}/\\textbf{81.28}       & \\textbf{83.10}/\\textbf{82.16}     &   \\textbf{80.93}/\\textbf{80.06}       \\\\\nBEVFusion\\_TTA$^\\dagger$ ~\\cite{bevfusion}           & 2                       & L+I                      & 79.97         & 87.96/87.58         & 81.29/80.92          &87.64/85.04          & 82.19/79.65          & 82.53/81.67          & 80.17/79.33          \\\\\nLidarMultiNet\\_TTA$^\\dagger$ ~\\cite{lidarmultinet}              &3                       & L                         & 79.94          & 87.64/87.26          & 80.73/80.36         & 87.75/85.07          & 82.48/79.86          & 82.77/81.84          & 80.50/79.59          \\\\\nMPPNet\\_Ens$^\\dagger$ ~\\cite{mppnet}                 & 4                      & L                         &79.60          & 87.77/87.37          & 81.33/80.93         & 87.92/85.15          & 82.86/80.14          & 80.74/79.90          & 78.54/77.73          \\\\\nMT-Net\\_Ens$^\\dagger$ ~\\cite{mtnet}              & 8                       & L                         & 78.45         & 87.11/86.69         & 80.52/80.11         & 86.50/83.55          & 80.95/78.08          & 80.50/79.43          & 78.22/77.17          \\\\\nDeepFusion\\_Ens$^\\dagger$~\\cite{deepfusion}                &9                    & L+I                         &78.41              & 86.45/86.09         & 79.43/79.09         & 86.14/83.77          & 80.88/78.57          & 80.53/79.80                  & 78.29/77.58                \\\\\nAFDetV2\\_Ens$^\\dagger$~\\cite{afdetv2}             & 12                       & L                       & 77.64            & 85.80/85.41         &78.71/78.34          &85.22/82.16          & 79.71/76.75        & 81.20/80.30                 & 78.70/77.83                 \\\\      \nINT\\_Ens$^\\dagger$~\\cite{int}             & 14                       & L                      &77.21            & 85.63/85.23          & 79.12/78.73          & 84.97/81.87          & 79.35/76.36          & 79.76/78.65                  & 77.62/76.54                    \\\\\nHorizonLiDAR3D\\_Ens$^\\dagger$~\\cite{ding20201st}            & 17                       & L+I                      & 77.11             & 85.09/84.68          & 78.23/77.83          & 85.03/82.10          & 79.32/76.50         & 79.73/78.78                    & 77.91/76.98                   \\\\\n\\hline\nLoGoNet (Ours)           & 18                       & L+I                       & 77.10             &   86.51/86.10     &   79.69/79.30      &  86.84/84.15       &     81.55/78.91      &     76.06/75.25               &   73.89/73.10          \\\\\nBEVFusion~\\cite{bevfusion}             & 20                      & L+I                       & 76.33             & 84.97/84.55         & 77.88/77.48         & 84.72/81.97         & 79.06/76.41         & 78.49/77.54                    & 76.00/75.09            \\\\\nCenterFormer~\\cite{centerformer}             & 21                      & L                     & 76.29    & 85.36/84.94                 & 78.68/78.28                            & 85.22/82.48          & 80.09/77.42          & 76.21/75.32          & 74.04/73.17          \\\\\nMPPNet~\\cite{mppnet}             & 25                      & L                       & 75.67              & 84.27/83.88         & 77.29/76.91          & 84.12/81.52          & 78.44/75.93          &77.11/76.36 & 74.91/74.18 \\\\\nDeepFusion~\\cite{deepfusion}             & 26                      & L+I                       & 75.54             & 83.25/82.82          & 76.11/75.69         & 84.63/81.80          & 79.16/76.40          & 77.81/76.82 & 75.47/74.51 \\\\   \\hline \\hline\n\\end{tabular}\n}\n\\label{tab:waymotest}\n\\end{table*}",
            "tab:waymoval": "\\begin{table*}[]\n\\caption{Performance comparison on the Waymo $val$ set for 3D vehicle (IoU = 0.7), pedestrian\n(IoU = 0.5) and cyclist (IoU = 0.5) detection. $\\ddagger$\nis reproduced by us based on the officially released CenterPoint~\\cite{centerpoint} with the RCNN refinement module.}\n\\scalebox{0.8}{\n\\begin{tabular}{l|c|c|c|cc|cc|cc}\n\\hline\\hline\n\\multirow{2}{*}{Method} & \\multirow{2}{*}{Frames} & \\multirow{2}{*}{Modality} & ALL (mAPH)   & \\multicolumn{2}{c|}{VEH (AP/APH)}        & \\multicolumn{2}{c|}{PED (AP/APH)}        & \\multicolumn{2}{c}{CYC (AP/APH)}         \\\\ \\cline{4-10} \n                        &                         &                           & L2             & L1                   & L2                   & L1                   & L2                   & L1                   & L2                   \\\\ \\hline\nSECOND~\\cite{second}                 & 1                       & L                         & 57.23          & 72.27/71.69          & 63.85/63.33          & 68.70/58.18          & 60.72/51.31          & 60.62/59.28          & 58.34/57.05          \\\\\nPointPillars~\\cite{pointpillars}           & 1                       & L                         & 57.53          & 71.60/71.00          & 63.10/62.50          & 70.60/56.70          & 62.90/50.20          & 64.40/62.30          & 61.90/59.90          \\\\\nLiDAR-RCNN~\\cite{lidarrcnn}              & 1                       & L                         & 60.10          & 73.50/73.00          & 64.70/64.20          & 71.20/58.70          & 63.10/51.70          & 68.60/66.90          & 66.10/64.40          \\\\\nPV-RCNN~\\cite{pvrcnn}                 & 1                       & L                         & 63.33          & 77.51/76.89          & 68.98/68.41          & 75.01/65.65          & 66.04/57.61          & 67.81/66.35          & 65.39/63.98          \\\\\nCenterPoint~\\cite{centerpoint}             & 1                       & L                         & 65.46             & -                    & -/66.20              & -                    & -/62.60              & -                    & -/67.60              \\\\\nPointAugmenting~\\cite{pointaugmenting}         & 1                       & L+I                       &    66.70\n            &       67.4/-               &     62.7/-                 &           75.04/-           &          70.6/-            &   76.29/-                   &       74.41/-               \\\\\nPyramid-PV~\\cite{pyramidrcnn}              & 1                       & L                         & -              & 76.30/75.68          & 67.23/66.68          & -                    & -                    & -                    & -                    \\\\\nPDV~\\cite{pdv} &1 &L &64.25 & 76.85/76.33 &69.30/68.81 &74.19/65.96 &65.85/58.28 &68.71/67.55 &66.49/65.36 \\\\\nGraph-RCNN~\\cite{graphrcnn}              & 1                       & L                         & 70.91          & 80.77/80.28          & 72.55/72.10          & 82.35/76.64          & 74.44/69.02          & 75.28/74.21          & 72.52/71.49          \\\\\n3D-MAN~\\cite{3dman}                    & 16                      & L                         & -              & 74.50/74.00          & 67.60/67.10          & 71.70/67.70          & 62.60/59.00          & -                    & -                    \\\\\nCenterformer~\\cite{centerformer}            & 8                       & L                         & 73.70           & 78.80/78.30          & 74.30/73.80          & 82.10/79.30          & 77.80/75.00          & 75.20/74.40          & 73.20/72.30          \\\\\nDeepFusion~\\cite{deepfusion}             & 5                       & L+I                       & -              & 80.60/80.10          & 72.90/72.40          & \\textbf{85.80}/83.00          & 78.70/76.00          & -                    & -                    \\\\\n% INT ~\\cite{int} & 10 & L & 73.60 &- &-/73.30 &- &-/71.90 &- &-/75.60 \\\\\nMPPNet~\\cite{mppnet} & 4 & L & 74.22 & 81.54/81.06 & 74.07/73.61 & 84.56/81.94  &77.20/74.67 & 77.15/76.50 & 75.01/74.38\\\\\nMPPNet~\\cite{mppnet}                  & 16                   & L                         & 74.85          & 82.74/82.28          & 75.41/74.96          & 84.69/82.25          & 77.43/75.06          & 77.28/76.66          & 75.13/74.52          \\\\\n\\hline\n% 67.9\t65.6\t68.6\t67.4\nBaseline~\\cite{centerpoint}$^\\ddagger$ & 1                      & L                      & 69.38 & 78.19/77.25 &70.43/69.90  & 80.31/74.61 & 72.49/67.01 & 75.62/74.45  &72.85/71.23 \\\\\nLoGoNet (Ours)                 & 1                      & L+I                       & 71.38 &78.95/78.41  & 71.21/70.71 & 82.92/77.13 & 75.49/69.94  & 76.61/75.53 & 74.53/73.48 \\\\\nLoGoNet (Ours)                 & 3                       & L+I                       & 74.86  &82.64/82.18  &74.60/74.17  & 85.60/82.72 &78.62/75.79  & 78.34/77.49 & 75.44/74.61 \\\\\nLoGoNet (Ours)                 & 5                       & L+I                       & \\textbf{75.54} & \\textbf{83.21}/\\textbf{82.72} & \\textbf{75.84}/\\textbf{75.38} & \\textbf{85.80}/\\textbf{83.14} & \\textbf{78.97}/\\textbf{76.33} & \\textbf{78.58}/\\textbf{77.79} & \\textbf{75.67}/\\textbf{74.91} \\\\ \\hline\\hline\n\\end{tabular}\n}\n\\label{tab:waymoval}\n\\end{table*}",
            "tab:kitti": "\\begin{table*}[]\n\\caption{Comparison with state-of-the-art approaches on the KITTI $val$ set with AP calculated by 40 recall positions. $*$ denotes our reproduced results based on the officially released codes with some modifications. Best in bold.}\n\\scalebox{0.86}{\n\\begin{tabular}{l|c|cccc|cccc|cccc|c}\n\\hline\\hline\n\\multirow{2}{*}{Method} & \\multirow{2}{*}{Modality} & \\multicolumn{4}{c|}{Car}      & \\multicolumn{4}{c|}{Pedestrian} & \\multicolumn{4}{c|}{Cyclist}  & \\multirow{2}{*}{mAP} \\\\ \\cline{3-14}\n                        &                           & Easy  & Mod.  & Hard  & mAP   & Easy   & Mod.   & Hard  & mAP   & Easy  & Mod.  & Hard  & mAP   &       \\\\ \\hline\nSECOND~\\cite{second}                 & L                         & 88.61 & 78.62 & 77.22 & 81.48 & 56.55  & 52.98  & 47.73 & 52.42 & 80.58 & 67.15 & 63.10 & 70.28 & 68.06 \\\\\nPointPillars~\\cite{pointpillars}            & L                         & 86.46 & 77.28 & 74.65 & 79.46 & 57.75  & 52.29  & 47.90 & 52.65 & 80.05 & 62.68 & 59.70 & 67.48 & 66.53 \\\\\nPointRCNN~\\cite{pointrcnn}               & L                         & 88.72 & 78.61 & 77.82 & 81.72 & 62.72  & 53.85  & 50.25 & 55.60 & 86.84 & 71.62 & 65.59 & 74.68 & 70.67 \\\\\nPV-RCNN~\\cite{pvrcnn}                & L                         &92.10 & 84.36 & 82.48 & 86.31 & 64.26 & 56.67& 51.91&57.61 &88.88& 71.95 &66.78&75.87 &73.26\\\\\nVoxel-RCNN~\\cite{voxelrcnn}  & L                         & 92.38  & 85.29 & 82.86 & 86.84 & -  & -  & - & - & - & - &- & - & - \\\\\nSE-SSD~\\cite{sessd}                 & L                         & 90.21 & \\textbf{86.25} & 79.22 & 85.23 & -      & -      & -     & -     & -     & -     & -     & -     & -     \\\\\nPDV~\\cite{pdv}                     & L                         & \\textbf{92.56} & 85.29 & 83.05 &   86.97    & 66.90  & 60.80  & 55.85 &   61.18    & \\textbf{92.72} & 74.23 & 69.60 & 78.85       &    75.67   \\\\\n\\hline\nMV3D~\\cite{mv3d}                   & L+I                       & 71.29 & 62.68 & 56.56 & 63.51 & -      & -      & -     & -     & -     & -     & -     & -     & -     \\\\\nAVOD-FPN~\\cite{avod}                & L+I                       & 84.41 & 74.44 & 68.65 & 75.83 & -      & 58.80  & -     & -     & -     & 49.70 & -     & -     & -     \\\\\nPointFusion~\\cite{pointfusion}             & L+I                       & 77.92 & 63.00 & 53.27 & 64.73 & 33.36  & 28.04  & 23.38 & 28.26 & 49.34 & 29.42 & 26.98 & 35.25 & 42.75 \\\\\nF-PointNet~\\cite{qi2018frustum}              & L+I                       & 83.76 & 70.92 & 63.65 & 72.78 & 70.00  & 61.32  & 53.59 & 61.64 & 77.15 & 56.49 & 53.37 & 62.34 & 65.58 \\\\\nCLOCs~\\cite{clocs}                   & L+I                       & 89.49 & 79.31 & 77.36 & 82.05 & 62.88  & 56.20  & 50.10 & 56.39 & 87.57 & 67.92 & 63.67 & 73.05 & 70.50 \\\\\n3D-CVF~\\cite{3dcvf}                  & L+I                       & 89.67 & 79.88 & 78.47 & 82.67 & -      & -      & -     & -     & -     & -     & -     & -     & -     \\\\\nEPNet~\\cite{epnet}                   & L+I                       & 88.76 & 78.65 & 78.32 & 81.91 & 66.74  & 59.29  & 54.82 & 60.28 & 83.88 & 65.60 & 62.70 & 70.69 & 70.96 \\\\\nFocalsConv~\\cite{focalsconv}              & L+I                       & 92.26 & 85.32 & 82.95 & 86.84     & -      & -      & -     & -     & -     & -     & -     & -     & -     \\\\\nCAT-Det~\\cite{catdet}                 & L+I                       & 90.12 & 81.46 & 79.15 & 83.58 & \\textbf{74.08}  & \\textbf{66.35}  & 58.92 & \\textbf{66.45} & 87.64 & 72.82 & 68.20 & 76.22 & 75.42 \\\\\nVFF~\\cite{vff}                     & L+I                       & 92.31 & 85.51 & 82.92 &    86.91   & 73.26  & 65.11  & \\textbf{60.03} &   66.13    & 89.40 & 73.12 & 69.86 &  77.46     &   76.94    \\\\\n\\hline\nBaseline~\\cite{voxelrcnn}$^*$& L\n& 92.24 & 84.52 & 82.54 & 86.43 & 65.51 & 59.67 & 53.73 & 59.63 &90.72 &70.94 & 66.88 & 76.18& 74.08 \\\\\nLoGoNet (Ours)             & L+I                       & 92.04      &  85.04  &  \\textbf{84.31}     &   \\textbf{87.13}    &  70.20 &   63.72   &   59.46   &   64.46    &   91.74   &    \\textbf{75.35}   &   \\textbf{72.42}   &  \\textbf{79.84}    & \\textbf{77.14}  \\\\\n\\hline\\hline\n\\end{tabular}\n}\n\\label{tab:kitti}\n% \\vspace{-0.2cm}\n\\end{table*}",
            "tab:kittitest": "\\begin{table}[]\n\\caption{Comparison of different methods on KITTI $test$ set for car and cyclist.}\n\\scalebox{0.66}{\n\\begin{tabular}{l|c|m{0.58cm}<{\\centering}m{0.58cm}<{\\centering}m{0.58cm}<{\\centering}m{0.62cm}<{\\centering}|m{0.58cm}<{\\centering}m{0.58cm}<{\\centering}m{0.58cm}<{\\centering}m{0.58cm}<{\\centering}}\n\\hline\n\n\\multirow{2}{*}{Method} & \\multirow{2}{*}{Modality} & \\multicolumn{4}{c|}{Car}      & \\multicolumn{4}{c}{Cyclist}   \\\\ \\cline{3-10} \n                        &                           & Easy  & Mod.  & Hard  & mAP   & Easy  & Mod.  & Hard  & mAP   \\\\ \\hline\nSECOND~\\cite{second} &L& 83.34& 72.55& 65.82 & 73.90&71.33& 52.08 &45.83& 56.41\\\\\nPointPillars~\\cite{pointpillars}&L&82.58&74.31 &68.99 &75.29 &77.10 &58.65& 51.92&62.56 \\\\\nSTD~\\cite{std}&L&87.95&79.71 &75.09& 80.92& 78.69& 61.59& 55.30& 65.19\\\\\nSE-SSD~\\cite{sessd}&L&91.49& 82.54 &77.15 &83.73&-& - &-&-\\\\\nPV-RCNN~\\cite{pvrcnn} &L&90.25& 81.43 &76.82 &82.83 &78.60& 63.71 &57.65&66.65 \\\\\nPDV~\\cite{pdv}  &L&90.43 &81.86  &77.36& 83.21& 83.04 &67.81& 60.46&70.44\\\\ \\hline\nPointPainting~\\cite{pointpainting}&L+I&82.11 &71.70 &67.08 &73.63&77.63& 63.78 &55.89 &65.77\\\\\nEPNet~\\cite{epnet} &L+I&89.81& 79.28 &74.59&81.23&-& - &-&-\\\\\n3D-CVF~\\cite{3dcvf}  &L+I&89.20& 80.05 &73.11&80.79 &-& - &-&-\\\\\nSFD~\\cite{sfd} &L+I&  91.73 &84.76& 77.92&84.80\n&-& - &-&-\\\\\n\nGraph-VoI~\\cite{graphrcnn}&L+I&\\textbf{91.89}&83.27&77.78&84.31& - &-&-&-\\\\\nVFF~\\cite{vff}&L+I& 89.50 &82.09& 79.29&83.62&-& - &-&-\\\\\nHMFI~\\cite{hmfi} &L+I& \t88.90 &\t81.93 &\t77.30 & 82.71\n&84.02 & 70.37 & 62.57&72.32\\\\\nCAT-Det~\\cite{catdet}&L+I&89.87&81.32&76.68&82.62 &83.68&68.81&61.45&71.31\\\\\n% LoGoNet (Ours) & L+I                      & 90.86  &  84.03     &  \\textbf{81.15}  & \\textbf{85.25}      & \\textbf{84.77}      & \\textbf{71.61 }    &    \\textbf{64.48}   & \\textbf{73.62} \\\\ \n\\hline \nLoGoNet (Ours) & L+I                      & 91.80 &  \\textbf{85.06}    &  \\textbf{80.74}  & \\textbf{85.87}      & \\textbf{84.47}      & \\textbf{71.70}    &    \\textbf{64.67}   & \\textbf{73.61} \\\\ \\hline \n\\end{tabular}\n}\n\\label{tab:kittitest}\n% \\vspace{-0.2cm}\n\\end{table}",
            "tab:ablationstudy": "\\begin{table}[]\n\\centering\n\\caption{Effect of each component in \\algorithmname~on WOD $val$ set. RCNN means only using single-modal two stage refinement module~\\cite{voxelrcnn}}\n\\scalebox{1}{\n\\begin{tabular}{ccccccc}\n\\hline\n\n\\multirow{2}{*}{RCNN} & \\multirow{2}{*}{GoF} & \\multirow{2}{*}{LoF} & \\multirow{2}{*}{FDA} & \\multicolumn{3}{c}{3D APH L2} \\\\ \\cline{5-7} \n                   &  &                      &                      & VEH      & PED      & CYC     \\\\ \\hline\n& & & &   65.04  & 61.04 & 66.93  \\\\\n\\checkmark& & & &   67.04  & 64.04 & 67.73  \\\\\n\\checkmark&\\checkmark& & &   68.01   & 65.72 & 68.70  \\\\\n\\checkmark&   & \\checkmark&&   68.26  & 66.97& 69.23 \\\\\n\\checkmark&\\checkmark   & \\checkmark&&   68.34  & 66.98 & 68.90 \\\\\n% \\checkmark&  & \\checkmark & \\checkmark &  68.83   & 66.98 & 69.33  \\\\\n\\checkmark&  \\checkmark&  \\checkmark&\\checkmark &   \\textbf{68.89}   & \\textbf{67.23} & \\textbf{69.36} \\\\ \\hline\n\\end{tabular}\n}\n\\label{tab:ablationstudy}\n\\end{table}",
            "tab:infotype": "\\begin{table}[]\n\\centering\n\\caption{Effect on the type of position information for LoF. XYZ indicates spatial grid locations, D and R indicate the number and the centroids of all points in each grid respectively.}\n\\scalebox{1.0}{\n\\begin{tabular}{cccc}\n\\hline\n\n \\multirow{2}{*}{Type} & \\multicolumn{3}{c}{3D APH L2} \\\\\\cline{2-4}  \n & VEH      & PED      & CYC     \\\\ \\hline\nXYZ+D& 68.14  & 66.69 & 69.07  \\\\\nXYZ+D+R&  68.26  & 66.97 & 69.23 \\\\ \\hline\n\\end{tabular}\n}\n\\label{tab:infotype}\n\\end{table}"
        },
        "figures": {
            "fig:motivation": "\\begin{figure*}[t]\n \\centering\n \\includegraphics[width=1.0\\linewidth]{motivation_v3.pdf}\n \\caption{Comparison between (a) global fusion and (b) local fusion. Global fusion methods perform fusion of point cloud features and image features across the whole scene, which lacks fine-grained region-level information. The proposed local fusion method fuses features of two modalities on each proposal, complementary to the global fusion methods.\n (c) Performance comparison of various methods in Waymo 3D detection leaderboard~\\cite{waymo}. Our \\algorithmname~ attains the top 3D detection performance, clearly outperforming all state-of-the-art global fusion based and LiDAR-only detectors. Please refer to Table~\\ref{tab:waymotest} for a detailed comparison with more methods.\n }\n \\centering\n \\label{fig:motivation}\n\\end{figure*}",
            "fig:framework": "\\begin{figure*}[!ht]\n \\centering\n \\includegraphics[width=1\\linewidth]{framework_v5.pdf}\n%  \\vskip -0.2cm\n \\caption{A schematic overview of \\algorithmname. The input point cloud is first voxelized and fed into a 3D backbone and the region proposal network (RPN) to produce initial proposals. And the input multi-camera images are processed by a well-pretrained 2D detector to produce the image features $F_I$. The multi-level voxel features $F_V$ of the 3D backbone and image features $F_I$ are then sent to the proposed local-to-global cross-modal fusion module. The local-to-global fusion mainly consists of Global Fusion (GoF), Local Fusion (LoF), and Feature Dynamic Aggregation (FDA) modules. Finally, the fused multi-modal features are used to refine the coarse bounding box proposals and their confidence scores, respectively.}\n \\centering\n % \\vskip -0.2cm\n \\label{fig:framework}\n\\end{figure*}",
            "fig:gof": "\\begin{figure}[t]\n \\centering\n \\includegraphics[width=1.0\\linewidth]{GoF_v4.pdf}\n\n \\caption{Global fusion module. We first calculate point centroids of non-empty voxel features, then project these point centroids onto the image plane and aggregate semantic features in image features $F_I$ through learnable dynamic offset. Then, we fuse sampled image features $\\hat F_I^i$ and voxel features by the cross-attention module to produce the cross-modal features $F_V^*$. Finally, the ROI-grid features $F_B^g$ are produced by the RoI pooling operation.}\n%  for each proposal.}\n \\centering\n%  \\vskip -0.2cm\n \\label{fig:gof}\n\\end{figure}",
            "fig:lof": "\\begin{figure}[t]\n \\centering\n \\includegraphics[width=1.0\\linewidth]{LoF_v5.pdf}\n \\caption{Local fusion module. It uniformly samples\ngrid points within each 3D proposal and encodes position information of raw point cloud through PIE to generate grid features. Then, we project the calculated grid centroids to the image plane and sample image features by the learned offsets. Finally, we fuse these grid features and sampled image features based on the cross-attention module to produce the locally fused ROI-grid features $F_B^l$.}\n \\centering\n % \\vskip -0.2cm\n \\label{fig:lof}\n\\end{figure}",
            "fig:fda": "\\begin{figure}[t]\n \\centering\n \\includegraphics[width=1.0\\linewidth]{FDA_v3.pdf}\n % \\vskip -0.4cm\n \\caption{Feature dynamic aggregation module, it performs self-attention on the grid features to build relationships between different grid points.}\n \\centering\n % \\vskip -0.2cm\n \\label{fig:fda}\n\\end{figure}"
        },
        "equations": {
            "eq:1": "\\begin{equation}\nc_i = \\frac{1}{{\\left| \\mathcal{P}(V_i) \\right|}}\\sum\\limits_{{p_i} \\in \\mathcal{P}(V_i)} {{p_i}},\n\\end{equation}",
            "eq:2": "\\begin{equation}\n\\textbf{p}_i = \\mathcal{M} \\cdot c_i,\n\\label{eqn:refp}\n\\end{equation}",
            "eq:3": "\\begin{equation}\n\\begin{array}{cc}\n{{F}_I^{k}} = {F_I}({{\\bf{p}}_i} + \\Delta {{\\bf{p}}_{mik}}),\\\\\n\\mathrm{CDF}({Q_i},{{\\hat F}_I^i}) = \\sum\\limits_{m = 1}^M {{W_m}} \\left[ \\sum\\limits_{k = 1}^K {{A_{mik}}\\cdot(W_m^{'}{F_I^{k}})} \\right],\n\\end{array}\n\\label{eqn:dca}\n\\end{equation}",
            "eq:4": "\\begin{equation}\n    F_G^j = \\mathrm{MLP}(\\gamma, c_B, \\log(\\left|N_{G_j} \\right|+\\tau)),\n\\end{equation}",
            "eq:5": "\\begin{equation}\n\\label{eqn:sumfeature}\nF_S = F_B^p+F_B^l+F_B^g.\n\\end{equation}",
            "eq:6": "\\begin{equation}\n \\mathcal {L}=\\mathcal {L}_{\\mathrm{RPN}} + \\mathcal {L}_{\\mathrm{conf}}+ \\alpha \\mathcal {L}_{\\mathrm{reg}},\n \\label {eq:loss}\n\\end{equation}"
        },
        "git_link": "https://github.com/sankin97/LoGoNet"
    }
}