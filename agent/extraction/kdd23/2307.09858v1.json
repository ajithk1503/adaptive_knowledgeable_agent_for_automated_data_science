{
    "meta_info": {
        "title": "Towards Reliable Rare Category Analysis on Graphs via Individual  Calibration",
        "abstract": "Rare categories abound in a number of real-world networks and play a pivotal\nrole in a variety of high-stakes applications, including financial fraud\ndetection, network intrusion detection, and rare disease diagnosis. Rare\ncategory analysis (RCA) refers to the task of detecting, characterizing, and\ncomprehending the behaviors of minority classes in a highly-imbalanced data\ndistribution. While the vast majority of existing work on RCA has focused on\nimproving the prediction performance, a few fundamental research questions\nheretofore have received little attention and are less explored: How confident\nor uncertain is a prediction model in rare category analysis? How can we\nquantify the uncertainty in the learning process and enable reliable rare\ncategory analysis?\n  To answer these questions, we start by investigating miscalibration in\nexisting RCA methods. Empirical results reveal that state-of-the-art RCA\nmethods are mainly over-confident in predicting minority classes and\nunder-confident in predicting majority classes. Motivated by the observation,\nwe propose a novel individual calibration framework, named CALIRARE, for\nalleviating the unique challenges of RCA, thus enabling reliable rare category\nanalysis. In particular, to quantify the uncertainties in RCA, we develop a\nnode-level uncertainty quantification algorithm to model the overlapping\nsupport regions with high uncertainty; to handle the rarity of minority classes\nin miscalibration calculation, we generalize the distribution-based calibration\nmetric to the instance level and propose the first individual calibration\nmeasurement on graphs named Expected Individual Calibration Error (EICE). We\nperform extensive experimental evaluations on real-world datasets, including\nrare category characterization and model calibration tasks, which demonstrate\nthe significance of our proposed framework.",
        "author": "Longfeng Wu, Bowen Lei, Dongkuan Xu, Dawei Zhou",
        "link": "http://arxiv.org/abs/2307.09858v1",
        "category": [
            "cs.AI"
        ]
    },
    "latex_extraction": {
        "content": {
            "section 1": {
                "name": "Introduction",
                "content": "\nIn contrast to the massive network data being generated and used every day, it is often the rare occurrences that might be of interest to us and plays a crucial role in various application domains. For example, in financial transaction networks~\\cite{bay2006large}, only a small portion of transactions are fraudulent, but it can lead to immeasurable financial loss; \nin network security~\\cite{wu2007local}, identifying malicious activities from large amounts of network traffic can better protect users from potential threats; in patient-symptom network~\\cite{karim2019comprehensive}, identifying and forecasting rare diseases (\\ie, the ones with very few records but severe symptoms) has become a longstanding research problem. Rare category characterization~\\cite{mullapudi2021learning} refers to the problem of ``\\emph{finding needles from the hay}'', which aims to characterize the support regions of minority classes (\\eg, needles) from the overwhelmed majority classes (\\eg, hay). \n\nTremendous efforts have been made to develop theories and algorithms for analyzing rare categories, from detecting rare categories in the cold-start setting~\\cite{pelleg2004active, DBLP:conf/kdd/ZhouZYATDH17} to tracking rare categories in the dynamic system~\\cite{ranshous2015anomaly, zhou2017discovering},  \nfrom visualizing the network layout of rare categories~\\cite{zhao2014fluxflow, zhang2017survey, lin2017rclens, pan2020rcanalyzer}\nto interpreting the behavior of rare categories ~\\cite{macha2018explaining, liu2019towards}.\nHowever, the vast majority of existing work does not take into account the reliability of rare category characterization. While many high-stake industries follow highly-regulated processes, prediction models are required to be not only accurate but also reliable. For example, in the case of financial fraud detection, guileful fraudulent users are good at camouflaging themselves in order to bypass the security system owned by financial institutions. Thus, it would be desirable to understand how accurate the prediction models are, as well as how trustworthy they are so that the security systems can raise alarms and request human intervention when predictions are made with low confidence. \n\n\n\nRecent developments in confidence calibration~\\cite{niculescu2005predicting, kumar2018trainable, widmann2019calibration, nixon2019measuring, zhang2020mix, minderer2021revisiting} provide a useful tool to make machine learning models uncertainty-aware and thus produce reliable predictions. However, confidence calibration in rare category characterization is non-trivial due to the unique challenges of rare categories. First, (\\textbf{C1. Uncertainty}) rare categories are often non-separable minority classes~\\cite{zhou2015rare}, such as the fraud patterns shown in Figure~\\ref{fig: illustration of financial fraud detection} (b). That is to say, overlapping support regions between classes introduce a large uncertainty in prediction. This is further confirmed by the reliability diagrams in Figure ~\\ref{fig: illustration of financial fraud detection} (c) and (d). The x-axis is the confidence interval [0, 1] grouped into 20 equal-size bins, the y-axis is the average accuracy of each bin, and samples are assigned to the corresponding bin \naccording to their confidence. A model is reliable and trustworthy if the average confidence of each bin closely matches its accuracy, any deviation from the diagonal represents a miscalibration (or unreliable). However, from Figures~\\ref{fig: illustration of financial fraud detection} (c) and (d), we can see that fraudulent users are over-confident, while normal users are under-confident - neither of the predictions is trustworthy. Second (\\textbf{C2. Rarity}), it is often the case that the observed data exhibits highly-skewed class-membership distributions, \\ie, rare categories are scarce and overwhelmed by other classes. While conventional confidence calibration measures are distribution-based (\\eg, expected calibration error (ECE)), they do not measure the calibration error of predictions for individual samples. It could be problematic for calibrating the predictions of rare categories, as the distribution-based confidence calibration measures (\\eg, ECE) can not produce accurate estimations when very few or even no rare category samples are observed in each confidence interval.\n\n\nIn this paper, we start with the investigation of the miscalibration of existing rare category characterization methods, finding that (1) existing methods tend to be over-confident in predicting rare categories, and (2) distribution-wise calibration models do not accurately measure miscalibration in the presence of rare categories. Motivated by these observations, we propose for the first time an individual calibration framework named \\name\\ for graph-structured data, which enables the confidence calibration of rare category analysis at an instance-level granularity. In particular, to address C1, we develop a node-level uncertainty quantification algorithm to model the overlapping support regions with high uncertainty; to address C2, we generalize the distribution-wise confidence calibration metric ECE to the instance level by proposing a novel measurement named Expected Individual Calibration Error (EICE). We conduct extensive experiments on real-world datasets, demonstrating the effectiveness of EICE in rare category characterization in terms of both confidence calibration and prediction performance.\nWe summarize our contributions as follows:\n\n\\begin{itemize}\n    \\item {\\bfseries Problem:} We identify for the first time the calibration problem for rare categories and study the unique challenges motivated by practical applications.  \n    \\item {\\bfseries Model:} We propose an end-to-end framework, called \\name, that jointly learns the characterizations of rare categories and calibrates the confidence.\n    \\item {\\bfseries Evaluation:} We systematically evaluate the performance of our method in two settings: 1) confidence calibration and 2) rare category characterization. Extensive results demonstrate the superior performance of our method.\n    % \\item {\\bf Reproducibility}: We publish our data and code at \\\\ https://anonymous.4open.science/r/CaliRare-D41C/.\n\\end{itemize}\nThe rest of this paper is organized as follows. We provide the problem definition in Section 2, followed by the proposed framework in Section 3. Section 4 discusses the experimental setup and results, followed by a literature review in Section 5. Finally, we conclude the paper in Section 6.\n\n\n\n\n\n\n\n"
            },
            "section 2": {
                "name": "Problem Definition",
                "content": "\nIn this section, we introduce the preliminaries of our problem setting. Then, we give the formal definition of calibrated on rare category characterization.\nWe use upper case calligraphic font letters to denote sets (e.g., $\\mathcal{G}$), bold upper case letters to denote matrices (e.g., $\\bm{A}$), bold lower case letters to denote vectors (e.g., $\\bm{x}$), and regular lower case letters to denote scalars (e.g., $\\alpha$). \nWe use superscript $^T$ for matrix transpose and superscript $^{-1}$ for matrix inversion (e.g., $\\bm{A}^T$ and $\\bm{A}^{-1}$ are the transpose and inversion of $\\bm{A}$ respectively).\n\n\n\\textbf{Rare Category Characterization (RCC).}\nGiven an undirected attributed graph $\\mathcal{G} = (\\mathcal{V}, \\mathcal{E}, \\bm{X})$ with the adjacency matrix $\\bm{A} \\in \\mathbb{R}^{N\\times N}$ and the node attribute matrix $\\bm{X}=[\\bm{x}_1,\\cdots,\\bm{x}_N]^T$, where $\\mathcal{V}$ is the set of nodes, $\\mathcal{E}$ is the set of edges, and $N=|\\mathcal{V}|$ is the number of nodes.\nMoreover, let $\\mathcal{K} = \\{v_1, \\cdots, v_n\\} \\in \\mathcal{V}$ denote $n$ labeled nodes, where we assume that (1) $n < N$ and (2) there is at least one node from each class. \nIn the setting of rare category characterization\\cite{he2010rare}, the goal is to learn a prediction function $f(\\cdot)$ that well characterizes the support regions of the minority classes and outputs a list of predicted rare category samples with high accuracy.\n\n\\textbf{Confidence Calibration.} In general, confidence calibration aims to calibrate the confidence (or prediction probability) of the model to let the calibrated confidence directly reflects the probability of the prediction being correct. Mathematically, given a random variable $X$ representing the input feature, $Y$ representing the label, and a model $f(\\cdot)$ that outputs the predicted label $\\hat{Y}$ and its associated confidence $\\hat{P}$. The model $f(\\cdot)$ is perfectly calibrated if:\n\\begin{equation}\n\\label{eqn:subproblems}\n\\begin{split}\n\\mathbb{P}(\\hat{Y}=Y|\\hat{P}=p) = p, \\forall p \\in [0, 1]\n\\end{split}\n\\end{equation}\n where $\\mathbb{P}(\\cdot,\\cdot)$ represents the joint distribution of the confidence $P$ and label $Y$. \n The left-hand side denotes the true data distribution's probability of getting a correct label for every sample, the right-hand side denotes the probability. \n Any difference between them is known as the calibration error. \n\n\nMany efforts have been made to measure the calibration error. Expected calibration error ~\\cite{naeini2015obtaining} is a commonly used metric that approximates the calibration error in expectation. Specifically, it divides prediction probability into a fixed number of bins with equal intervals. The calibration error is the weighted average of the difference between every bin's accuracy and confidence. Formally speaking, the ECE is defined as follows:\n\\begin{equation}\n\\label{eqn:subproblems}\n\\begin{split}\nECE=\\sum_{m=1}^{M}\\frac{|B_m|}{N}|acc(B_m)-conf(B_m)|,\n\\end{split}\n\\end{equation}\nwhere $N$ is the number of samples, $M$ is the number of bins, $|B_m|$ is the number of predictions in the bin $B_m$, $acc(B_m)$ is the accuracy of bin $B_m$, and $conf(B_m)$ is the average confidence of samples in bin $B_m$.\nHowever, the highly-skewed distribution of prediction probability makes only a few bins contribute to ECE~\\cite{guo2017calibration}, and the good performance of a bin may be due to the cancellation effect resulting from the overlap of over-confident and under-confident among many predictions ~\\cite{nixon2019measuring}. Thus, adaptive calibration error (ACE) is proposed to address these issues. It adaptively chooses the bin intervals to ensure each bin contains the same number of predictions. More precisely,\n\\begin{equation}\n\\label{eqn:subproblems}\n\\begin{split}\nACE=\\frac{1}{CM}\\sum_{c=1}^{C}\\sum_{m=1}^{M}\\frac{|B_m|}{N}|acc(B_m, c)-conf(B_m, c)|,\n\\end{split}\n\\end{equation}\nwhere $N$ is the number of samples, $C$ is the number of class labels, $M$ is the number of bins, and $|B_m|$ is the number of predictions in the bin $B_m$. The index bin of each prediction is determined by the $\\lfloor N/M \\rfloor$.\n\n\nReliability plays a pivotal role in the development of modern deep learning, especially for high-stakes domains. However, reliable rare category characterization has received little attention. Back to the example of financial fraud detection in Figure~\\ref{fig: illustration of financial fraud detection}, the model aims to detect fraud patterns and find fraudulent users from huge amounts of transactions. If the model is over-confident, \\ie, the confidence is larger than its accuracy, it may misclassify normal users as fraudulent users, giving users a bad experience and damaging the financial institution's reputation. Otherwise, if the model is under-confident, \\ie, the confidence is lower than its accuracy, it may miss the fraudulent users and fail to prevent illicit activities. Thus, the method not only needs to be accurate but also needs to indicate when it is likely to be incorrect. Here, we give the formal definition of calibrated on rare category characterization in Problem 1.\n\n\n\n{\\setlength{\\parindent}{0pt}\n\\begin{problem}\n \\textbf{Calibration on rare category characterization} \\\\\n    \\textbf{Input:} (i) An undirected attributed graph $\\mathcal{G} = (\\mathcal{V}, \\mathcal{E})$ with the adjacency matrix $\\bm{A}$, the node attribute matrix $\\bm{X}$, and the label $\\bm{Y}$, (ii) a rare category characterization model $f(\\cdot)$, (iii) the outputs of $f(\\cdot)$ including the prediction labels $\\hat{Y}$ and the corresponding prediction confidence $P$. \\\\\n   \\textbf{Output:} The calibrated confidence $\\hat{P}$ of the classifier $f(\\cdot)$.\n   \\end{problem}\n}\n\n\n\n\n\n\n\n\n\n\n\n"
            },
            "section 3": {
                "name": "Calibration on Rare Category",
                "content": "\nIn this section, we introduce our proposed framework \\name\\ for confidence calibration on rare category characterization.\nWe start by investigating the risk of miscalibration in predicting rare categories, which reveals that the state-of-the-art methods are primarily over-confident in predicting rare categories.\nThen, we introduce a novel individual calibration metric named EICE that is designed to alleviate the miscalibration in rare category analysis. \nFinally, we present the theoretical analysis of EICE and provide an end-to-end optimization algorithm \\name\\ for rare category calibration. \n\n\n\n",
                "subsection 3.1": {
                    "name": "Over-Confident Tendency in Predicting Rare Categories",
                    "content": " \nRecall the reliability diagrams in Figure~\\ref{fig: illustration of financial fraud detection}, which reveals that the existing RCC methods are primarily over-confident in predicting minority classes while under-confident in predicting majority classes. \nThis observation naturally gives rise to two questions: (1) Does this observation universally true? and (2) Can we apply existing calibration tools to alleviate the miscalibration in rare category characterization? \n\nTo answer these questions and have a better understanding of Problem 1, we further conduct a case study on a collaboration network~\\cite{sen2008collective, DBLP:conf/kdd/ZhouZ0H20}, which is composed of one majority class and one minority class. Specifically, we consider the cost-sensitive GCN (CGCN) ~\\cite{pan2015cogboost} as the baseline method \\footnote{For binary classification problems with positive class ($+$) and negative class ($-$), cost-sensitive learning is to learn a model with minimum misclassification costs: $C(-,+) \\times \\#FN + C(+,-)\\times \\#FP$, where $C(i,j)$ is the cost of predicting a sample belonging to class $i$ when in fact it belongs to class $j$, $\\#FN$, and $\\#FP$ are the numbers of false negative and false positive samples respectively.}, which is widely used in rare category characterization. \nIn Figure~\\ref{fig: histogram of CiteSeer}, we present the reliability diagram, where the x-axis represents the confidence intervals with equal size, and the y-axis represents the average accuracy in each bin. \nIn particular, the three figures in the first row of Figure~\\ref{fig: histogram of CiteSeer} show the results of CGCN without calibration, while the three figures in the second row of Figure~\\ref{fig: histogram of CiteSeer} show the results of CGCN with calibration (\\ie, temperature scaling~\\cite{guo2017calibration}).\nThe blue bars show the empirical accuracy of CGCN, while the green bars correspond to the expected accuracy based on confidence. Intuitively, if the empirical accuracy of CGCN is equal to the expected accuracy in each bin, then we can claim that the model is perfectly calibrated. \nHowever, in Figure~\\ref{fig: histogram of CiteSeer}, we observe that \n(1) CGCN is over-confident in predicting minority classes while under-confident in predicting majority classes, which is consistent with our observations in Figure~\\ref{fig: illustration of financial fraud detection}.\n(2) By comparing Figure~\\ref{fig: histogram of CiteSeer} (b) and (e), temperature scaling achieves good performance in calibrating CGCN in predicting the majority class.\n(3) By comparing Figure~\\ref{fig: histogram of CiteSeer} (c) and (f), temperature scaling not only fails to calibrate CGCN in predicting the minority class but even amplifies the miscalibration in Figure~\\ref{fig: histogram of CiteSeer} (f). \n\nWe believe two factors result in the miscalibration phenomenon for RCC: characterizations of rare categories and calibration metrics.\nFirst, rare categories are naturally scarce. The distribution of rare categories is highly skewed, and they are often overwhelmed by the majority class, so little attention has been paid to the rare categories during the process of calibration. Additionally, rare categories are often non-separable from the majority class. The overlapping support regions between rare categories and majority classes introduce uncertainty, which inevitably reduces the reliability of the model and increases miscalibration.\nSecond, the widely-used metric for calibration, ECE, suffers from several issues ~\\cite{kumar2019verified, nixon2019measuring}. \nOn the one hand, the highly-skewed distribution of predictions. One desired property of a probabilistic model is sharpness, which means the model should always predict with high confidence. This property leads to the result that most predictions are assigned to the right bins, while few predictions are assigned to the left bins. For the bins on the left, the number of predictions is very small and their accuracy is inaccurate and prone to change, bringing inaccurate calibration errors. For the bins on the right, the number of predictions for each bin is so large that rare categories are ignored when calculating the average accuracy and confidence.\nAdditionally, there exists an overlap of over-confident and under-confident between lots of predictions in the same bin. Thus, the calibration error may be reduced due to the cancellation effect, not the true improvement. \nOn the other hand, the selection of the number of bins. More bins will alleviate the cancellation effect but inevitably introduce more noise, while fewer bins approximate accuracy more precisely but bring more overlap between predictions. The number of bins directly determines the number of predictions in each bin and therefore affects their calibration errors.\n\n\n\n"
                },
                "subsection 3.2": {
                    "name": "Expected Individual Calibration Error",
                    "content": "\nFollowing the discussion in subsection 3.1, the core issue of ECE is that this metric is distribution-based, selecting the number of bins will inevitably make mistakes. To address this challenge, we propose a novel measurement: Expected Individual Calibration Error (EICE), which approximates calibration error to the instance level and does not need to choose the number of bins. Ideally, we expect every sample to be perfectly calibrated and the final result of EICE is 0. The formal definition of EICE is given as follows:\n\\begin{equation}\n\\label{eqn: expected ice}\n\\begin{split}\n\\mathbb{E}_{\\hat{p}}[|\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p|].\n\\end{split}\n\\end{equation}\nwhere $\\hat{y}$ is the predicted label of the sample and $\\hat{p}$ is its associate confidence. Different from ECE which approximates expectations by grouping predictions into bins, EICE measures calibration error at the level of individual samples.  \nSince the accuracy for each sample is either 0 (incorrect) or 1 (correct), which cannot indicate the true probability of getting a correct prediction precisely. \nRecent advances in uncertainty quantification demonstrate that uncertainty quantification could reflect how uncertain the predictions are and discriminate between high and low-confidence predictions~\\cite{alaa2020discriminative}, i.e., jackknife quantifies uncertainty in terms of the average prediction error~\\cite{barber2021predictive}.\nThus, we propose to utilize the sample's uncertainty to represent the individual prediction performance of $f(\\cdot)$.  \n\nInspired by~\\cite{kang2022jurygcn}, we leverage the jackknife uncertainty to quantify the uncertainty of samples. Let $f(v; \\theta)$ denote the model, where $v$ is a node and $v \\in \\mathcal{V}$, $\\theta \\in \\Theta$ are the model parameters, and $\\Theta$ is the parameter space. The parameters $\\hat{\\theta}$ are trained based on solving the optimization problem:\n\\begin{equation}\n\\label{eqn:optimization}\n\\begin{split}\n\\hat{\\theta} = \\arg \\min_{\\theta \\in \\Theta} \\mathcal{L}(\\mathcal{V}_{train};\\theta)\n\\end{split}\n\\end{equation}\nwhere $\\mathcal{V}_{train} \\subseteq \\mathcal{V}$ is the set of training nodes, $\\mathcal{L}(\\mathcal{V}_{train},\\theta)$ is the loss of training set, such as cross-entropy, etc.\n\nThe jackknife estimates the node-level confidence interval $\\mathcal{C}(v;\\theta)$ by the technique of leave-one-out (LOO). More precisely, it leaves out each sample in $\\mathcal{V}_{train}$ to re-train the model and evaluates the performance of every re-trained model on the held-out sample $v$. The $\\mathcal{C}(v;\\hat{\\theta})$ is defined as follows:\n\\begin{equation}\n\\label{eqn: confidence interval}\n\\begin{split}\n\\mathcal{C}_\\alpha(v;\\hat{\\theta}) = [\\mathcal{Q}_\\alpha(\\{f(v; \\hat{\\theta_{-i}}) - r_i\\}), \\mathcal{Q}_{1-\\alpha}(\\{f(v; \\hat{\\theta_{-i}}) + r_i\\})]\n\\end{split}\n\\end{equation}\nwhere $r_i = |y_i - f(i; \\hat{\\theta_{-i}})|$ is the error residual of node $i \\in \\mathcal{V}_{train}$, $\\hat{\\theta_{-i}}$ are the parameters of the model re-trained on the dataset $\\mathcal{V}_{train} \\backslash \\{i\\}$ (remove node $i$ from training set), $\\mathcal{Q_\\alpha}(\\mathcal{R})$ and $\\mathcal{Q}_{1-\\alpha}(\\mathcal{R})$ are the $\\alpha$ and $1-\\alpha$ quantile of the set $\\mathcal{R}$,\nand $\\mathcal{Q}_\\alpha(\\mathcal{R}) = \\mathcal{Q}_{1-\\alpha}(-\\mathcal{R})$.\n\nHowever, the re-training procedure is time-consuming and computationally expensive, especially for large-scale datasets. Through the influence functions~\\cite{koh2017understanding} (essentially Taylor expansion over the model parameters), the parameters $\\hat{\\theta_{-i}}$ can be obtained based on the trained model $f(v; \\hat{\\theta)}$ without re-training the model. The time complexity is linear in $O(Np)$, where $p$ is the number of parameters of the model, and $N$ is the size of the training set~\\cite{alaa2020discriminative}.\n\nIf node $i$ was upweighted by a small perturbation $\\epsilon$, the new parameters $\\hat{\\theta_{i,\\epsilon}}$ are as follows:\n\\begin{equation}\n\\label{eqn:influence_function}\n\\begin{split}\n\\hat{\\theta_{i,\\epsilon}} =& \\arg \\min_{\\theta \\in \\Theta} \\mathcal{L}(\\mathcal{V}_{train};\\theta) + \\epsilon \\mathcal{L}(i;\\theta) \\\\\n& \\approx \\hat{\\theta_{i}} + \\epsilon (\\mathcal{H}^{-1}_{\\hat{\\theta}}\\nabla_{\\theta}L(i;\\hat{\\theta}))\n\\end{split}\n\\end{equation}\nwhere $\\mathcal{H}_{\\hat{\\theta}}=\\frac{1}{|\\mathcal{V}_{train}|}\\nabla^2_{\\theta}\\sum_{i}L(i;\\hat{\\theta})$ is the Hessian matrix. For simplicity, we derive an approximate expression for the first-order influence function.\n\nAfter applying influence functions, the parameters $\\hat{\\theta_{-i}}$ can be approximately obtained by setting $\\epsilon=-\\frac{1}{|\\mathcal{V}_{train}|}$, since removing a node is equivalent to upweight it by $-\\frac{1}{|\\mathcal{V}_{train}|}$.\n\nWith Eq.\\ref{eqn: confidence interval} and Eq.\\ref{eqn:influence_function}, we get the lower bound $\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta})$ and upper bound $\\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta})$ of the confidence interval with respect to node $v$ without re-training the model. The definition of the uncertainty of node $v$ is defined as follows:\n\\begin{equation}\n\\label{eqn:uncertainty}\n\\begin{split}\n\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta}) =& \\mathcal{Q}_\\alpha(\\{f(v; \\hat{\\theta_{-i}}) - r_i\\}) \\\\\n\\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta}) =& \\mathcal{Q}_{1-\\alpha}(\\{f(v; \\hat{\\theta_{-i}}) + r_i\\}) \\\\\nuncer(v;\\hat{\\theta})=& \\frac{\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta}) + \\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta})}{2}\n\\end{split}\n\\end{equation}\n\n\nWith the uncertainty and confidence of a node, we approximate individual calibration error by the difference between its uncertainty and confidence. More precisely, %$ICE(v) = |uncer(v;\\hat{\\theta}) - conf(v;\\hat{\\theta)}|$\n\\begin{equation}\n\\label{eqn:ice}\n\\begin{split}\nICE(v) = |uncer(v;\\hat{\\theta}) - conf(v;\\hat{\\theta})|\n\\end{split}\n\\end{equation}\n\nFormally, given an L-layer GCN model $f(\\cdot)$ with parameters $\\hat{\\theta}$ and the uncertainty of nodes, the EICE is defined as follows:\n\\begin{equation}\n\\label{eqn:ece}\n\\begin{split}\nEICE =\\sum_{v \\in \\mathcal{V}}\\frac{1}{N} ICE (v) = \\sum_{v \\in \\mathcal{V}}\\frac{1}{N} |uncer(v;\\hat{\\theta}) - conf(v;\\hat{\\theta})|\n\\end{split}\n\\end{equation}\nwhere $uncer(v;\\hat{\\theta})$ is the uncertainty of node $v$, and $conf(v;\\hat{\\theta})$ is the confidence of node $v$. \n\nThe detailed description is presented in Algorithm ~\\ref{Alg1}. In particular, the inputs include an undirected attributed graph $\\mathcal{G} = (\\mathcal{V}, \\mathcal{E})$ with the training set $\\mathcal{V}_{train}$ and validation set $\\mathcal{V}_{val}$, a classifier model $f(\\cdot)$ with parameters $\\hat{\\theta}$, loss function $\\mathcal{L}$, and the coverage parameter $\\alpha$. \nFor Step 1 to Step 5, we compute the new model parameters $\\hat{\\theta}_{-i}$ after removing node $i$ from the training set, and the error residual $r_i$ for every node $i \\in \\mathcal{V}_{train}$. \nFor Step 6 to Step 11, we first compute the lower bound and upper bound for every node $v \\in \\mathcal{V}_{val}$ according to $\\hat{\\theta}_{-i}$ and $r_i$. Then, we compute the uncertainty and confidence of every node $v$. With $uncer(v, \\hat{\\theta})$ and $conf(v, \\hat{\\theta})$, we get the $ICE(v)$ being the difference between them.\nFinally, for step 12, we output the EICE by taking the average ICE from every node in the validation set.\n\n\n\n\\renewcommand{\\algorithmicrequire}{\\textbf{Input:}}\n\\renewcommand{\\algorithmicensure}{\\textbf{Output:}}\n\\begin{algorithm}[t]\n\\caption{Expected individual calibration error (EICE)}\n\\label{Alg1}\n\\begin{algorithmic}[1]\n\\Require \\item[]\n    An undirected attributed graph $\\mathcal{G} = (\\mathcal{V}, \\mathcal{E})$ with training set $\\mathcal{V}_{train}$ and validation set $\\mathcal{V}_{val}$, a classifier model $f(\\cdot)$ with parameters $\\hat{\\theta}$ and cross-entropy loss $\\mathcal{L}$, coverage parameter $\\alpha$.\n\\Ensure \\item[]\n    The EICE.\n\n\\For{every $i \\in \\mathcal{V}_{train}$}\n        \\State\n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        Compute the Hessian matrix $\\mathcal{H}_{\\hat{\\theta}} \\leftarrow \\frac{1}{|\\mathcal{V}_{train}|}\\nabla^2_{\\theta}\\sum_{i}L(i;\\hat{\\theta})$.\n        }\n        \\State\n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        Compute new model parameters \\\\\n        $\\hat{\\theta_{-i}} \\leftarrow \\hat{\\theta} -\\frac{1}{|\\mathcal{V}_{train}|} \\mathcal{H}^{-1}_{\\hat{\\theta}}\\nabla_{\\theta}L(i;\\hat{\\theta})$.\n        }\n        \\State \n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        Compute the error residual $r_i \\leftarrow |y_i - f(i; \\hat{\\theta_{-i}})|$  .}\n\\EndFor\n\n\\For{every $v \\in \\mathcal{V}_{val}$}\n    \\State\n    \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n    Compute the confidence interval of node $v$ with lower bound $\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta}) \\leftarrow \\mathcal{Q}_\\alpha(\\{f(v; \\hat{\\theta_{-i}}) - r_i\\})$ and upper bound \\linebreak $\\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta}) \\leftarrow \\mathcal{Q}_{1-\\alpha}(\\{f(v; \\hat{\\theta_{-i}}) + r_i\\})$. \n    }\n    \\State\n    \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n   Compute the uncertainty of node $v$, \\linebreak $uncer(v;\\hat{\\theta}) \\leftarrow (\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta}) + \\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta}))/2$.\n    }\n    \\State \n    \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n    Compute the confidence $conf(v;\\hat{\\theta})$ of the node $v$ for the given classifier model $f(\\cdot)$ with parameters $\\hat{\\theta}$.\n    }\n    \\State \n    \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n    Compute the individual calibration error of the node $v$ with Equation~\\ref{eqn:ice}, $ICE(v) \\leftarrow |uncer(v;\\hat{\\theta}) - conf(v;\\hat{\\theta})|$.\n    }\n\\EndFor\n\n\\State \\Return $EICE \\leftarrow \\sum_{v \\in \\mathcal{V}_{val}}\\frac{1}{|\\mathcal{V}_{val}|}ICE(v)$\n\\end{algorithmic}\n\\end{algorithm}\n\n\n\n\n"
                },
                "subsection 3.3": {
                    "name": "Theoretical Analysis",
                    "content": "\nIn this section, we prove the theoretical properties of the metrics we proposed: ICE and EICE. \nFirst, we show that ICE is a faithful measure of the discrepancy between confidence and accuracy, which is zero if and only if the model $f(\\cdot)$ is fully calibrated. Next, we compare EICE and ECE and show that a small EICE implies a better calibration compared to a small ECE.\n\n\\begin{property}\\label{prop-cali}\nFor the test node $v \\in \\mathcal{V}$, $ICE(v)= 0$ if and only if the model $f(\\cdot)$ is perfectly calibrated for $v$.\n\\end{property}\n\n\\begin{proof}\\label{def-cali}\nOn the one hand, we assume $ICE(v)=|\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p| = 0$, where $\\hat{p}=p$ represents $conf(v;\\theta)=p$, and $\\mathbb{P}(\\hat{y}=y)$ indicates $acc(v;\\theta)$.\nSince $|\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p|\\geq 0$, we have $\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) = p$. Thus, if $conf(v;\\theta)=p$, we can get $acc(v;\\theta)=p=conf(v;\\theta)$, which implies that the model $f(\\cdot)$ is perfectly calibrated for $v$. \n\nOn the other hand, we assume the model $f(\\cdot)$ is perfectly calibrated for $v$, i.e., $conf(v;\\theta) = acc(v;\\theta)$. Then, for any $p$, if we have $conf(v;\\theta)=p$, we can get $acc(v;\\theta)=p$. This indicates that $\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) = p$. Thus, we can get $ICE(v)=|\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p| = 0$.\n\\end{proof}\n\n\\begin{remark}\nProperty~\\ref{prop-cali} demonstrates the equivalence between the small ICE and the calibrated individual classification, which implies that ICE is a proper scoring rule. This gives us the opportunity to analyze calibration at the individual level and bring benefits to rare categories.\n\\end{remark}\n\n\\begin{property}\\label{prop-strong}\nIf we have $EICE=0$, we will have $ECE=0$. And conversely, if we have $ECE=0$, we can still have $EICE > 0$.\n\\end{property}\n\\begin{proof}\nOn the one hand, we assume $EICE=0$. According to Property~\\ref{prop-cali}, we have $\\mathbb{E}_{\\hat{p}}[|\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p|] = 0$. \nFor the ECE, we have \n\\begin{equation} \n\\label{eqn:expand_ece}\n\\begin{split}\nECE &=\\mathbb{E}_{\\hat{p}}[|\\mathbb{P}(\\hat{Y}=Y|\\hat{P}=p) - p|] \\\\\n    &= \\mathbb{E}_{\\hat{p}}[|\\sum_{y \\in Y} (\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p)|] \\\\\n    &\\leq \\sum_{y \\in Y} \\mathbb{E}_{\\hat{p}}[| \\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p|]=0\n\\end{split}\n\\end{equation}\nSince $ECE\\geq 0$, we can get $ECE=0$.\n\nOn the other hand, we assume $ECE=0$, i.e., $\\mathbb{E}_{\\hat{p}}[|\\sum_{y \\in Y} (\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p)|]=0$. Suppose we have two nodes $v_1, v_2 \\in \\mathcal{V}$ with label $y_1$ and $y_2$, respectively. Consider the case $\\mathbb{P}(\\hat{y_1}=y_1|\\hat{p_1}=p) - p=0.1$ and $\\mathbb{P}(\\hat{y_2}=y_2|\\hat{p_2}=p) - p=-0.1$, the $EICE = 0.2 \\neq 0$, but $ECE=0$.\n\\end{proof}\n\n\\begin{remark}\nProperty~\\ref{prop-strong} shows that our EICE is more stringent in terms of model calibration compared to ECE. The previous ECE measures calibration from a global perspective and examines the discrepancy at each confidence level. \nThis does not guarantee a well-calibrated classification at the individual level and can make the model prone to ignore rare categories.\n\\end{remark}\n\n\n\n\n"
                },
                "subsection 3.4": {
                    "name": "Optimization Objective",
                    "content": "\nIn this paper, we consider the task of rare category characterization with an L-layer GCN. We found that the loss of many node-level tasks can be represented as $\\mathcal{L}=\\frac{1}{|V_{train}|} \\sum_{v \\in V_{train}} l(v;\\theta)$. There are many choices for the loss function $l$, and Cross-Entropy (CE) is the most widely used loss function for classification tasks, which is also utilized in our paper. So the loss can be written as:\n\\begin{equation} \n\\label{eqn:loss_nll}\n\\begin{split}\n\\mathcal{L}_{CE} = - \\frac{1}{|V_{train}|}\\sum_{i=1}^{|V_{train}|}\\sum_{c=1}^{C} y_{i}log p_{i}\n\\end{split}\n\\end{equation}\nwhere $y_i$ is the one-hot encoding label for node $i$, and $p_i$ is the prediction probability of the model for node $i$.\n\nDue to the different properties of the majority class and minority class of GCNs, we intend to calibrate the model with respect to the EICE. Hence, we design a regularization term as follows:\n\\begin{equation} \n\\small\n\\label{eqn:loss_iece}\n\\begin{split}\n\\mathcal{L}_{EICE} = \\frac{1}{|V_{train}|}\\sum_{i=1}^{|V_{train}|} ICE(i)\n\\end{split}\n\\end{equation}\nwhere $ICE(i)$ is the individual calibration error of node $i$. \n\nIntuitively, we'd like to improve the performance of the model in terms of calibration and classification. Thus, We design \\name\\ to jointly learn the characterizations of rare categories and calibrate the confidence. \nSpecifically, we combine $\\mathcal{L}_{CE}$ and $\\mathcal{L}_{EICE}$ together, and the overall learning objective of our method can be rewritten as Eq.~\\ref{eqn: loss}. \n\\begin{equation} \n\\small\n\\label{eqn: loss}\n\\begin{split}\n\\mathcal{L} = (1-\\lambda) \\mathcal{L}_{CE} + \\lambda \\mathcal{L}_{EICE}\n\\end{split}\n\\end{equation}\nwhere $\\lambda$ is the hyper-parameter that controls the trade-off between the performance of calibration and classification.\n\nThe detailed description is presented in Algorithm ~\\ref{Alg2}. With a classifier model $f(\\cdot)$ as the base model, we update its parameters until the overall loss $\\mathcal{L}$ converges or reaches the maximum number of epochs. \n\n\n\\begin{algorithm}[t]\n\\caption{\\name\\ Algorithm} \n\\label{Alg2}\n\\begin{algorithmic}[1]\n\\Require \\item[]\n    Graph $\\mathcal{G} = (\\mathcal{V}, \\mathcal{E})$, a classifier model $f(\\cdot)$ with parameters $\\hat{\\theta}$, the hyper-parameter $\\lambda$, a test node $v$.\n\\Ensure \\item[]\n    The calibrated prediction probability of test node $v$.\n\n\\For{$epoch=1:e$}\n        \n        \\State\n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        Compute the original loss $\\mathcal{L}_{CE}$ for model $f(\\cdot)$.\n        }      \n        \\State\n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        Compute the regualarizer $\\mathcal{L}_{IECE}$ using Algorithm ~\\ref{Alg1}.\n        }\n        \\State\n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        Compute the overall learning objective $\\mathcal{L}$ based on the combination of $\\mathcal{L}_{CE}$ and $\\mathcal{L}_{ICE}$ from Equation\\ref{eqn: loss}.\n        }\n        \\State \n        \\parbox[t]{\\dimexpr\\linewidth-\\algorithmicindent}{\n        If the overall loss $\\mathcal{L}$ converges, break; otherwise, update the parameters $\\hat{\\theta}$.}\n\\EndFor\n\\State \\Return The calibrated prediction probability of test node $v$ by model $f(\\cdot)$ with updated parameters $\\hat{\\theta}$. \n\\end{algorithmic}\n\\end{algorithm}\n\n\n\n\n\n\n\n\n\n"
                }
            },
            "section 4": {
                "name": "Experiments",
                "content": "\nIn this section, we demonstrate the performance of our proposed \\name\\ algorithm \\footnote{\\url{https://github.com/wulongfeng/CaliRare}} in terms of confidence calibration, rare category characterization, and parameter sensitivity analysis.\n\n\n\n\n\n\n",
                "subsection 4.1": {
                    "name": "Experiment Setup",
                    "content": "\n\\textbf{Dataset:} We utilize five commonly used real-world graph benchmarks: Cora~\\cite{sen2008collective}, CiterSeer~\\cite{sen2008collective}, PubMed~\\cite{sen2008collective}, DBLP~\\cite{fu2020magnn}, and FaceBook~\\cite{rozemberczki2021multi}. The statistics of these datasets are summarized in Table~\\ref{tab: statistics}, and the last column is the ratio of the minority class. Specifically, to further augment the imbalance of rare category problems, we choose one class of the dataset as the minority class, and the rest are combined to form the majority class. To provide more results, we select three label rates for the training set, specifically, 20, 30, and 40 nodes for each class before combination.\n\n\n\n\n\n\n"
                },
                "subsection 4.2": {
                    "name": "Calibration Evaluation",
                    "content": "\n\n\\textbf{Baselines for Calibration.} We conduct comparison experiments between our method and the following state-of-the-art calibration approaches. We follow the official implementation and use the default setting on hyperparameters (if needed) for these baselines.\n\\begin{itemize}\n\\item {\\bfseries Temperature Scaling (TS)}~\\cite{guo2017calibration}: Temperature scaling is a simple extension of Platt scaling. It learns a scalar parameter $t$ as the temperature of the predictive distribution and smoothes the predicted probability by the temperature.\n\\item {\\bfseries Matrix Scaling (MS)}~\\cite{guo2017calibration}: Matrix scaling is another extension of Platt scaling. It replaces the scalar parameter with a matrix and outputs the calibrated predictive probability.\n\\item {\\bfseries Label Smoothing (LS)}~\\cite{szegedy2016rethinking}: Label smoothing replaces one-hot encoded labels with a mixture of the label and a uniform distribution. ~\\cite{muller2019does} demonstrates that it can implicitly calibrate the model's predictions as it can prevent the model from overfitting/over-confidence.\n\\item {\\bfseries Mixup}~\\cite{wang2021mixup}: As a popular data augmentation technique, Mixup takes combinations of pairs of training samples and their labels. It has been shown that Mixup can significantly improve confidence calibration across diverse applications.\n\\item {\\bfseries CaGCN}~\\cite{wang2021confident}: CaGCN is a method for confidence calibration in GNNs. It learns a unique transformation from the logits of GNNs to calibrate the confidence of each node. \n\\end{itemize}\n\n\\noindent\\textbf{Experimental settings.}\nWe evaluate the performance of all methods by three standard measurements: recall, Macro-F1, and ACE. Compared with the majority class, the ratio of the minority class is very small. Thus, recall reflects the performance of models on the minority class more precisely. Macro-F1 is the unweighted mean of F1 for each class, and will not be affected by data imbalance. ACE is a popular metric for calibration, specifically, it refers to the ACE of the minority class here. Furthermore, to have a more comprehensive understanding of the results, we propose a new metric: Macro-ACE, which is the unweighted mean of ACE for each class. For Cora/PubMed/CiteSeer, we adopt the default training set (20 nodes per class), validation set (500 nodes), and test set (1000 nodes) provided by torch\\_geometric, and randomly chose nodes in the same setting for the rest of datasets. We also randomly add nodes to the training set for different label rates. Additionally, as presented in Table~\\ref{tab: statistics}, the minority class accounts for a small portion of the datasets, so the cost-sensitive loss is utilized to increase the importance of the minority class for all methods, and the weights are inversely proportional to their percentage.\nThe base uncalibrated model is a GCN model with parameters suggested by ~\\cite{kipf2016semi, wang2021confident}. For our method, we also adopt a two-layer GCN with the same hyper-parameters of GCN, and set the coverage parameter $\\alpha=0.9$ and the trade-off hyper-parameter $\\lambda=0.1$ for all datasets. \n\n\\noindent\\textbf{Results.}\nThe calibration evaluation results are reported in Table ~\\ref{tab: calibration result}. In general, we have those observations: (1) Our method is better than Uncal across almost all metrics, demonstrating that our method can calibrate the confidence without compromising its accuracy and recall. (2) Compared with other methods, MixUp shows good performance regarding the recall rather than Macro-F1.  (3) In contrast to Mixup, MS focuses more on accuracy than recall and will get overfitting on some datasets. (4) CaGCN performs significantly better on the majority class than the minority class, that's why it has larger ACE and normal Macro-ACE.\n\n\n\n"
                },
                "subsection 4.3": {
                    "name": "Rare Category Characterization",
                    "content": "\n\\textbf{Baselines for Classification.} We conduct comparison experiments between our method and the following approaches. Specifically, we consider popular GNNs with cost-sensitive loss as our baseline methods in the task of rare category characterization. We use the default setting on hyperparameters (if needed) for these baselines.\n\\begin{itemize}\n\\item {\\bfseries Cost-Sensitive Graph Convolutional Network (GCN-CS)}: GCN~\\cite{kipf2016semi} is a type of convolutional neural network. It applies convolution on graphs and takes advantage of the structural information.\n\\item {\\bfseries Cost-Sensitive Graph Attention Network (GAT-CS)}~\\cite{velivckovic2017graph}: GAT is a popular method in GNNs. It expands the basic aggregation function of the GCN and assigns different importance to each edge through the attention mechanism. \n\\item {\\bfseries Cost-Sensitive Graph Isomorphism Network (GIN-CS)}: GIN ~\\cite{xu2018powerful} is another method in GNNs that aims to achieve the ability as the Weisfeiler-Lehman graph isomorphism test.\n\\end{itemize}\n\n\\noindent\\textbf{Experimental settings.}\nWe evaluate the performance of all methods by three standard measurements for classification: accuracy, recall, and Macro-F1. It shares the same experimental setting with the experiments of calibration.\n\n\\noindent\\textbf{Results.}\nThe classification evaluation results are reported in Table ~\\ref{tab: classification result}. In general, we have the following observations: (1) our method achieves better performance than the baseline methods across all metrics. For example, compared to our best competitor GAT-CS, we achieve a 28.77\\% improvement in recall and 43.21\\% improvement in Macro-F1 on the dataset of Cora. (2) More label rates for each class will get better performance, which is consistent with our understanding.\n(3) In some cases, GAT-CS have a better recall. For example, for Citeseer with 30 label rates, the recall of GAT-CS is larger than ours, but Macro-F1 is lower than ours, that's because it misclassifies majority class examples as minority class examples.  \n\n\n\n"
                },
                "subsection 4.4": {
                    "name": "Parameter Sensitivity Analysis",
                    "content": "\nWe study the parameter sensitivity of our proposed method \\name\\ with respect to the coverage parameter $\\alpha$ and the trade-off parameter $\\lambda$. Here, given $\\alpha \\in [0.7, 0.75, 0.8, 0.85, 0.9]$ and $\\lambda \\in [0.1, 0.2, 0.3, 0.4]$, we test these parameters on Cora for the label rate of each class is 20 in terms of Macro-ACE. The results are shown in Figure~\\ref{fig: parameter sensitivity}, and we can get the following observations: (1) Compared with $\\alpha$, Macro-ACE is more likely to be affected by $\\lambda$; (2) As the value of $\\lambda$ increases, the importance of calibration also increases, which degrade the model's accuracy and affect calibration.\n\n\n\n\n\n\n"
                }
            },
            "section 5": {
                "name": "Related Work",
                "content": "\nIn this section, we briefly review the recent advances in rare category characterization and confidence calibration.\n\n\\textbf{Rare Category Characterization.} Pelleg et al. first formalize the problem of Rare category characterization~\\cite{pelleg2004active}. In contrast to imbalance classification~\\cite{sun2009classification, chawla2002smote}, which seeks to improve the overall performance, and outlier detection~\\cite{hodge2004survey}, which looks for irregular patterns, rare category characterization investigates the compactness of the minority class and characterizes them from the highly-skewed datasets. Extensive work has been done for rare category characterization. GRADE ~\\cite{he2008graph} is proposed by He et al., it detects rare categories from regions where probability density changes the most. MUVIR~\\cite{zhou2015muvir} exploits the relationship between multiple views to characterize rare categories, and every single view is built based on existing techniques for rare category detection. Some sampling-based methods are also introduced, such as SMOTE~\\cite{chawla2002smote}, which adopts the technique of a combination of over-sampling the minority classes and under-sampling the majority class to achieve better performance. Other representation learning methods are also proposed, such as SPARC~\\cite{zhou2018sparc} etc. However, these methods are mainly designed to improve accuracy, little attention has been paid to the calibration of rare categories.\n\n\n\\textbf{Confidence Calibration.} Confidence calibration has been well-studied in various fields recently. Niculescu-Mizil et al. propose to utilize reliability diagrams, and useful visual tools to explore calibration of deep neural network~\\cite{niculescu2005predicting}. Guo et al. further introduce a more convenient metric, the expected calibration error (ECE), as it is a scalar summary statistic of calibration~\\cite{guo2017calibration}, which is commonly used in the field of calibration. They also found that modern neural networks are poorly calibrated and investigated factors that influence calibration. Platt scaling ~\\cite{platt1999probabilistic} is the most popular post-processing parametric approach. It learns two scalar parameters on the validation set and outputs the calibrated probability based on them. Temperature scaling ~\\cite{guo2017calibration} is a simple extension of Platt scaling, it only involves a single scalar, namely temperature for all classes. Matrix scaling and vector scaling are another two extensions of Platt scaling to higher-dimension. Isotonic regression~\\cite{zadrozny2002transforming} is the most popular non-parametric method that finds the piecewise constant function to calibrate probabilities. Wang et al. explore the confidence calibration in GNNs~\\cite{wang2021confident}. However, little work has been done in the scenario of rare category characterization. Additionally, the shortcomings of ECE have been demonstrated in many works ~\\cite{nixon2019measuring, vaicenavicius2019evaluating, zhang2020mix, ashukha2020pitfalls}, such as fixed calibration ranges, pathologies in static binning schemes, etc. Other metrics, such as adaptive calibration error (ACE) are introduced to address these issues, which are also used in our paper. We further propose the EICE, calibrating the model without compromising its accuracy.\n\n\n\n"
            },
            "section 6": {
                "name": "Conclusion",
                "content": "\nRare categories are of great importance to a variety of high-impact applications, such as financial fraud detection, rare disease diagnosis, etc. However, most of the existing work is designed to improve the accuracy of rare category analysis, while little attention has been paid to enhancing its reliability. \nIn this paper, we propose EICE, which leverages individual uncertainty to approximate its accuracy and measures the calibration error at the level of instances. We further design a regularization term based on EICE, jointly learn the characterizations of rare categories and calibrate the confidence. Extensive results show that our method achieves significant improvements for rare categories analysis by comparing with five popular baseline methods for calibration and three popular baseline methods for classification. \n\n\n\n\n\\begin{acks}\nThis work is supported by Virginia Tech, Cisco, Deloitte, Commonwealth Cyber Initiative, and 4-VA. The views and conclusions are those of the authors and should not be interpreted as representing the official policies of the funding agencies or the government.\n\\end{acks}\n\n\n%%\n%% The next two lines define the bibliography style to be used, and\n%% the bibliography file.\n\\bibliographystyle{ACM-Reference-Format}\n\\bibliography{Calibration on Rare Category}\n\n\n%%\n%% If your work has an appendix, this is the place to put it.\n\n\n\n"
            }
        },
        "tables": {
            "tab: statistics": "\\begin{table}[htp]\n\\caption{Statistics of real-world graph benchmarks.}\n\\small\n\\centering\n\\label{tab: statistics}\n\\scalebox{0.9}{\n \\begin{tabular}{cccccc}\n\\hline\n\\textbf{Types}& \\textbf{Datasets}& \\textbf{Nodes}& \\textbf{Edges}& \\textbf{Features}& \\textbf{Minority Class}\\\\\n\\hline \n\\multirow{3}{*}{Citation}\n        &Cora  & 2708  & 10556   & 1433   & 12.96\\% \\\\\n        %\\hhline{~-----}\n        &CiteSeer  & 3327  & 9104   & 3703   & 15.72\\% \\\\\n        %\\hhline{~-----}\n         &PubMed  & 19717  & 88648   & 500   & 20.81\\% \\\\\n         %\\hhline{~-----}\n         &DBLP  & 17716  & 105734   & 1639  &  11.19\\% \\\\\n{Social}\n        &FaceBook  &22470  &342004   &128 & 14.81\\%\\\\\n\\hline\n\\end{tabular}}\n\\end{table}",
            "tab: calibration result": "\\begin{table*}[!t]\n    \\caption{ Confidence Calibration evaluation on five datasets with various label rates for each class.} \n    \\label{tab: calibration result}\n    \\centering\n    \\scalebox{0.95}{\n    \\begin{tabular}{ccccccccccccccccc}\n        \\hline\n        \\multirow{2}{*}{\\textbf{DataSets}} &\n        \\textbf{LR\\_C} & \n        \\multicolumn{5}{c}{\\textbf{20}} &\n        \\multicolumn{5}{c}{\\textbf{30}} &\n        \\multicolumn{5}{c}{\\textbf{40}} \\\\\n        %\\hhline{|~|-|-|-|-|-|-|-|-|-|-|-|-|-|}\n        \\hhline{~-~----~----~----}\n        &\\textbf{Metrics} & \n        & Recall & $F_1$ & ACE & \\multicolumn{1}{c}{M\\_ACE} & \n        & Recall & $F_1$ & ACE & \\multicolumn{1}{c}{M\\_ACE} & \n        & Recall & $F_1$ & ACE & \\multicolumn{1}{c}{M\\_ACE} \\\\\n        \\hline\n        \\multirow{7}{*}{Cora} \n        &\\textbf{Uncal} && 71.54 & 78.89 & 0.1515 & 0.1104 & & 71.54 & 76.98 & 0.1544 & 0.1091 && 79.23 & 78.66 & 0.1606 & 0.1096 \\\\\n        &\\textbf{TS} && 72.31 & 81.82 & 0.2130 & 0.1235 & & 94.62 & 75.06 & 0.1230 & 0.0925 && 90.00 & 78.78 & \\textbf{0.0930} & \\textbf{0.0760} \\\\\n        &\\textbf{MS} && 53.85 & 78.89 & 0.326 & 0.1955 & & 53.08 & 78.38 & 0.3450 & 0.2095 && 63.08 & 82.70 & 0.3290 & 0.1930 \\\\\n        &\\textbf{LS} && \\textbf{84.62} & 80.98 & 0.1507 & 0.1258 & & 80.00 & \\textbf{82.70} & 0.1237 & 0.1166 && 86.92 & 81.81 & 0.1136 & 0.1048 \\\\\n        &\\textbf{MixUp} && \\textbf{84.62} & 76.76 & 0.1414 & 0.1384 & & \\textbf{97.69} & 46.78 & 0.1464 & 0.3495 && \\textbf{96.92} & 52.01 & 0.1332 & 0.3438 \\\\\n        &\\textbf{CaGCN} && 50.00 & 77.68 & 0.2994 & 0.1594 & & 50.77 & 78.55 & 0.2921 & 0.1559 && 60.00 & 81.82 & 0.2298 & 0.1270 \\\\ \n        %\\hhline{~----------------}\n        \\hhline{~-~----~----~----}\n        &\\textbf{Ours} && \\textbf{84.62} & \\textbf{82.10} & \\textbf{0.1263} & \\textbf{0.0894}  & & 80.77 & 81.05 & \\textbf{0.0958} & \\textbf{0.0731} & & 86.15 & \\textbf{83.00} & 0.1049 & 0.0816 \\\\\n        \\hline\n        \\multirow{7}{*}{PubMed} \n        &\\textbf{Uncal} && 85.00 & 83.55 & 0.1217 & 0.0954 & & 83.89 & 83.31 & 0.0953 & 0.0847 && 87.22 & 82.82 & 0.0849 & 0.0694 \\\\\n        &\\textbf{TS} && 82.78 & 84.57 & 0.1200 & 0.0840 & & 84.44 & 85.26 & 0.0900 & 0.0700 && 88.89 & 83.59 & 0.0830 & 0.0755 \\\\\n        &\\textbf{MS} && 76.67 & \\textbf{86.90} & 0.1650 & 0.1055 & & 78.89 & \\textbf{87.27} & 0.1320 & 0.0875 && 77.78 & 85.76 & 0.1460 & 0.1000 \\\\\n        &\\textbf{LS} && 87.22 & 84.40 & 0.1100 & 0.1116 & & 90.00 & 83.58 & 0.1151 & 0.1143 && 93.89 & 81.87 & 0.1172 & 0.1118 \\\\\n        &\\textbf{MixUp} && \\textbf{98.33} & 72.93 & 0.1145 & 0.1266 & & \\textbf{95.56} & 77.74 & 0.1036 & 0.1230 && \\textbf{98.89} & 78.07 & 0.1088 & 0.1117 \\\\\n        &\\textbf{CaGCN} && 73.89 & 86.31 & 0.1418 & 0.0760 & & 74.44 & 86.08 & 0.1504 & 0.0795 && 77.78 & \\textbf{87.01} & 0.1620 & 0.0851 \\\\ \n        %\\hhline{~----------------}\n        \\hhline{~-~----~----~----}\n        &\\textbf{Ours} && 86.67 & 84.09 & \\textbf{0.0688} & \\textbf{0.0543} & & 88.33 & 84.38 & \\textbf{0.0765} & \\textbf{0.0565} & & 84.44 & 84.11 & \\textbf{0.0701} & \\textbf{0.0572} \\\\\n        \\hline\n       \\multirow{7}{*}{CiteSeer} \n        &\\textbf{Uncal} && 69.37 & 84.10 & 0.1547 & 0.1281 & & 71.88 & 85.03 & 0.1470 & 0.1190 && 72.50 & 83.63 & 0.1514 & 0.1248 \\\\\n        &\\textbf{TS} && 68.13 & 84.54 & 0.2820 & 0.1730 & & 68.13 & 84.69 & 0.2190 & 0.1365 && 68.75 & 84.93 & 0.2080 & 0.1155 \\\\\n        &\\textbf{MS} && 62.50 & 83.87 & 0.3420 & 0.2120 & & 63.12 & 83.33 & 0.3340 & 0.2035 && 63.75 & 84.22 & 0.2220 & 0.1485 \\\\\n        &\\textbf{LS} && 68.75 & 84.16 & 0.1359 & 0.1121 & & 71.25 & 84.80 & 0.1551 & 0.1197 && 71.25 & 85.26 & 0.1422 & 0.1194 \\\\\n        &\\textbf{MixUp} && \\textbf{81.25} & 84.00 & 0.1249 & 0.1427 & & \\textbf{81.87} & 83.94 & 0.1085 & 0.1171 && \\textbf{83.75} & 82.83 & 0.1261 & 0.1270 \\\\\n        &\\textbf{CaGCN} && 56.25 & 81.67 & 0.2842 & 0.1606 & & 64.38 & 83.68 & 0.2374 & 0.1299 && 58.75 & 82.44 & 0.2642 & 0.1498 \\\\ \n        %\\hhline{~----------------}\n        \\hhline{~-~----~----~----}\n        &\\textbf{Ours} && 75.00 & \\textbf{85.72} & \\textbf{0.1034} & \\textbf{0.0957} & & 73.12 & \\textbf{86.27} & \\textbf{0.0961} & \\textbf{0.0933} & & 75.00 & \\textbf{86.79} & \\textbf{0.1223} & \\textbf{0.1037} \\\\\n        \\hline\n        \\multirow{7}{*}{DBLP} \n        &\\textbf{Uncal} && 71.82 & 85.15 & 0.1907 & 0.1413 & & 73.64 & 81.70 & 0.1649 & 0.1254 && 78.18 & 81.35 & 0.1317 & 0.1031 \\\\\n        &\\textbf{TS} && 71.82 & 87.44 & 0.2440 & 0.1350 & & 79.09 & 87.43 & 0.1960 & 0.1135 && 83.64 & 86.93 & 0.2030 & 0.1245 \\\\\n        &\\textbf{MS} && 61.82 & 84.74 & 0.2430 & 0.1520 & & 63.64 & 84.37 & 0.2330 & 0.1440 && 60.00 & 82.51 & 0.3380 & 0.2025 \\\\\n        &\\textbf{LS} && 78.18 & \\textbf{89.01} & 0.1457 & 0.1406 & & 89.09 & \\textbf{87.47} & 0.1713 & 0.1530 && 89.09 & 84.49 & 0.1511 & 0.1381 \\\\\n        &\\textbf{MixUp} && \\textbf{90.91} & 67.79 & 0.1046 & 0.1042 & & \\textbf{98.18} & 57.96 & 0.1061 & 0.0930 && \\textbf{94.55} & 68.24 & 0.0953 & 0.0921 \\\\\n        &\\textbf{CaGCN} && 55.45 & 82.51 & 0.2212 & 0.1194 & & 63.64 & 84.37 & 0.2181 & 0.1153 && 60.91 & 82.87 & 0.2292 & 0.1219 \\\\ \n        %\\hhline{~----------------}\n        \\hhline{~-~----~----~----}\n        &\\textbf{Ours} && 84.45 & 86.93 & \\textbf{0.1026} & \\textbf{0.0902} & & 82.73 & 86.27 & \\textbf{0.1009} & \\textbf{0.0819} & & 85.45 & \\textbf{87.88} & \\textbf{0.0964} & \\textbf{0.0813} \\\\\n        \\hline\n        \\multirow{7}{*}{FaceBook} \n        &\\textbf{Uncal} && 74.82 & 62.47 & 0.1180 & 0.1096 & & 69.78 & 63.73 & 0.1310 & 0.1006 && 89.93 & 64.23 & 0.1350 & 0.1091 \\\\\n        &\\textbf{TS} && 79.14 & 64.71 & 0.1660 & 0.1200 & & 74.10 & 64.75 & 0.1550 & 0.1215 && 91.37 & 65.18 & 0.1600 & 0.1190 \\\\\n        &\\textbf{MS} && 0.00 & 46.27 & 0.7240 & 0.4215 & & 5.04 & 46.27 & 0.7330 & 0.4255 && 5.76 & 51.78 & 0.5980 & 0.3555 \\\\\n        &\\textbf{LS} && 86.33 & 63.62 & 0.1337 & 0.1054 & &77.70 & 61.62 & 0.1127 & 0.0964 && 94.24 & 59.28 & 0.1377 & 0.1248 \\\\\n        &\\textbf{MixUp} && \\textbf{96.40} & 47.24 & 0.1616 & 0.2028 & & \\textbf{84.89} & 62.85 & 0.1010 & 0.1171 && \\textbf{97.12} & 55.51 & 0.1122 & 0.1436 \\\\\n        &\\textbf{CaGCN} && 42.45 & 68.85 & 0.4340 & 0.2358 & &43.17 & 72.00 & 0.3869 & 0.2116  && 62.59 & \\textbf{81.31} & 0.2164 & 0.1203 \\\\ \n        %\\hhline{~----------------}\n        \\hhline{~-~----~----~----}\n        &\\textbf{Ours} && 79.14 & \\textbf{73.14} & \\textbf{0.0843} & \\textbf{0.0583} & & 75.54 & \\textbf{75.64} & \\textbf{0.0962} & \\textbf{0.0788} & & 80.58 & 77.93 & \\textbf{0.1109} & \\textbf{0.0833} \\\\\n        \\hline\n    \\end{tabular}}\n\\end{table*}",
            "tab: classification result": "\\begin{table*}[!th]\n    \\caption{Rare category characterization evaluation on five datasets with various label rates for each class.}\n    \\label{tab: classification result}\n    \\centering\n    \\scalebox{0.99}{\n    \\begin{tabular}{cccccccccccccc}\n        \\hline\n        \\multirow{2}{*}{\\textbf{DataSets}} &\n        \\textbf{LR\\_C} & \n        \\multicolumn{4}{c}{\\textbf{20}} &\n        \\multicolumn{4}{c}{\\textbf{30}} &\n        \\multicolumn{4}{c}{\\textbf{40}} \\\\\n        \\hhline{~-~---~---~---}\n        &\\textbf{Metrics} & \n        & Acc & Recall & $F_1$ & \n        & Acc & Recall & $F_1$ & \n        & Acc & Recall & $F_1$ \\\\\n        \\hline\n        \\multirow{4}{*}{Cora} \n        &\\textbf{GIN-CS} && 82.70 & 43.08 & 39.30 & & 79.90 & 46.15 & 37.38 & & 76.80 & 66.15 & 42.57\\\\\n        &\\textbf{GAT-CS} && \\textbf{90.50} & 62.31 & 63.04 & & 89.60 & 55.38 & 58.06 && 80.20 & 82.31 & 51.94\\\\\n        &\\textbf{GCN-CS} && 89.50 & 71.54 & 78.89 & & 88.10 & 71.54 & 76.98 && 88.50 & 79.23 & 78.66\\\\\n        \\hhline{~-~---~---~---}\n        &\\textbf{Ours} && \\textbf{90.50} & \\textbf{84.62} & \\textbf{82.10} & & \\textbf{90.10} & \\textbf{80.77} & \\textbf{81.05} & & \\textbf{91.00} & \\textbf{86.15} & \\textbf{83.00}\\\\\n        \\hline\n        \\multirow{4}{*}{PudMed} \n        &\\textbf{GIN-CS} && 80.00 & 36.11 & 39.39 & & 81.90 & 32.78 & 39.46 & & 76.80 & 47.22 & 42.29\\\\\n        &\\textbf{GAT-CS} && 87.80 & 78.89 & 69.95 & & 87.70 & \\textbf{88.89} & 72.23 && 88.00 & 77.78 & 70.00\\\\\n        &\\textbf{GCN-CS} && 89.20 & 85.00 & 83.55 & & 89.10 & 83.89 & 83.31 && 88.40 & \\textbf{87.22} & 82.82\\\\\n        \\hhline{~-~---~---~---}\n        &\\textbf{Ours} && \\textbf{89.50} & \\textbf{86.67} & \\textbf{84.09} & & \\textbf{89.60} & 88.33 & \\textbf{84.38} & & \\textbf{89.70} & 84.44 & \\textbf{84.11}\\\\\n        \\hline\n        \\multirow{4}{*}{CiteSeer} \n        &\\textbf{GIN-CS} && 75.80 & 50.00 & 39.80 & & 71.40 & 53.12 & 37.28 & & 71.70 & 68.13 & 43.51\\\\\n        &\\textbf{GAT-CS} && 92.30 & 69.37 & 74.25 & & 91.30 & \\textbf{76.88} & 73.87 && 92.10 & \\textbf{75.00} & 75.24\\\\\n        &\\textbf{GCN-CS} && 91.80 & 69.37 & 84.10 & & 92.20 & 71.88 & 85.03 && 91.20 & 72.50 & 83.63\\\\\n        \\hhline{~-~---~---~---}\n        &\\textbf{Ours} && \\textbf{92.40} & \\textbf{75.00} & \\textbf{85.72} & & \\textbf{92.90} & 73.12 & \\textbf{86.27} & & \\textbf{93.10} & \\textbf{75.00} & \\textbf{86.79}\\\\\n        \\hline\n        \\multirow{4}{*}{DBLP} \n        &\\textbf{GIN-CS} && 81.00 & 40.91 & 32.17 & & 76.40 & 43.64 & 28.92 & & 88.20 & 20.00 & 27.16\\\\\n        &\\textbf{GAT-CS} && 94.30 & 81.82 & 97.95 & & 93.60 & 64.55 & 68.93 && 93.20 & 67.27 & 68.52\\\\\n        &\\textbf{GCN-CS} && 94.30 & 71.82 & 85.15 & & 92.30 & 73.64 & 81.70 && 91.70 & 78.18 & 81.35\\\\\n        \\hhline{~-~---~---~---}\n        &\\textbf{Ours} && \\textbf{94.40} & \\textbf{85.45} & \\textbf{86.93} && \\textbf{94.20} & \\textbf{82.73} & \\textbf{86.27} && \\textbf{94.90} & \\textbf{85.45} & \\textbf{87.88} \\\\\n        \\hline\n        \\multirow{4}{*}{FaceBook} \n        &\\textbf{GIN-CS} && 79.30 & 63.31 & 45.95 & & 75.50 & 74.10 & 45.68 & & 79.60 & 67.63 & 47.96\\\\\n        &\\textbf{GAT-CS} && 81.70 & 74.10 & 52.96 & & \\textbf{88.70} & 59.71 & 59.50 && 83.50 & 76.26 & 56.23\\\\\n        &\\textbf{GCN-CS} && 72.50 & 74.82 & 62.47 & & 74.90 & 69.78 & 63.73 && 72.20 & \\textbf{89.93} & 64.23\\\\\n        \\hhline{~-~---~---~---}\n        &\\textbf{Ours} && \\textbf{83.20} & \\textbf{79.14} & \\textbf{73.14} & & 85.90 & \\textbf{75.54} & \\textbf{75.64} & & \\textbf{87.20} & 80.58 & \\textbf{77.93} \\\\\n        \\hline\n    \\end{tabular}}\n\\end{table*}"
        },
        "figures": {
            "fig: illustration of financial fraud detection": "\\begin{figure}[ht]\n\\small\n\\captionsetup{font=footnotesize}\n\\centering\n\\subfigure[Financial transaction network]{\n    \\includegraphics[width=3.8cm, height=3.1cm]{figures/financial_fraud4.png}\n    }\n\\hspace{-3.5mm}\n\\subfigure[Network Layout]{\n    \\includegraphics[width=4cm, height=3.5cm]{figures/citeseer_rare_test_300_update.png}\n    }\n    \n\\subfigure[Fraudulent users (over-confident)]{\n    \\includegraphics[width=4cm, height=3.1cm]{figures/Fraud_Minority_update.png}\n    }\n\\hspace{-3.5mm}\n\\subfigure[Normal users (under-confident)]{\n    \\includegraphics[width=4cm, height=3.1cm]{figures/Fraud_Majority_update.png}\n    }\n\\caption{An illustrative example of financial fraud detection. (a) is a miniature of a financial transaction network, where \nthe blue people are fraudulent users, and the green people are normal users. (b) shows the network layout of a financial transaction network\\cite{assefa2020generating}, where fraudulent users colored in blue and normal users colored in green are overlapped together. (c) and (d) are reliability diagrams for the task of predicting fraudulent users and normal users, correspondingly.}\n\\label{fig: illustration of financial fraud detection} \n\\end{figure}",
            "fig: histogram of CiteSeer": "\\begin{figure*}[h]\n\\small\n\\captionsetup{font=footnotesize}\n\\centering\n\\subfigure[All]{\n    \\includegraphics[width=5.6cm, height=4.0cm]{figures/CiteSeer_All_2.png}\n    }\n\\subfigure[Majority]{\n    \\includegraphics[width=5.6cm, height=4.0cm]{figures/CiteSeer_Majority_2.png}\n    }\n\\subfigure[Minority]{\n    \\includegraphics[width=5.6cm, height=4.0cm]{figures/CiteSeer_Minority_2.png}\n    }\n\\subfigure[All]{\n    \\includegraphics[width=5.6cm, height=4.0cm]{figures/CiteSeer_All_Calibrated_2.png}\n    }\n\\subfigure[Majority]{\n    \\includegraphics[width=5.6cm, height=4.0cm]{figures/CiteSeer_Majority_Calibrated_2.png}\n    }\n\\subfigure[Minority]{\n    \\includegraphics[width=5.6cm, height=4.0cm]{figures/CiteSeer_Minority_Calibrated_2.png}\n    }\n\\caption{Reliability diagrams for GCN on CiteSeer w/o calibration. The confidence of a well-calibrated model should closely match its accuracy, namely, aligned with the diagonal. Below the diagonal represents over-confident, and above the diagonal represents under-confident.}\n\\label{fig: histogram of CiteSeer} \n\\end{figure*}",
            "fig: parameter sensitivity": "\\begin{figure}[!tb]\n\\centering\n\\includegraphics[width=.46\\textwidth]{figures/MacroACE-lambda-alpha_noMargin.png}\n\\caption{Parameter study on the coverage parameter $\\alpha$ and hyper-parameter $\\lambda$.}\n\\label{fig: parameter sensitivity}\n\\vspace{-5mm}\n\\end{figure}"
        },
        "equations": {
            "eq:1": "\\begin{equation}\n\\label{eqn:subproblems}\n\\begin{split}\n\\mathbb{P}(\\hat{Y}=Y|\\hat{P}=p) = p, \\forall p \\in [0, 1]\n\\end{split}\n\\end{equation}",
            "eq:2": "\\begin{equation}\n\\label{eqn:subproblems}\n\\begin{split}\nECE=\\sum_{m=1}^{M}\\frac{|B_m|}{N}|acc(B_m)-conf(B_m)|,\n\\end{split}\n\\end{equation}",
            "eq:3": "\\begin{equation}\n\\label{eqn:subproblems}\n\\begin{split}\nACE=\\frac{1}{CM}\\sum_{c=1}^{C}\\sum_{m=1}^{M}\\frac{|B_m|}{N}|acc(B_m, c)-conf(B_m, c)|,\n\\end{split}\n\\end{equation}",
            "eq:4": "\\begin{equation}\n\\label{eqn: expected ice}\n\\begin{split}\n\\mathbb{E}_{\\hat{p}}[|\\mathbb{P}(\\hat{y}=y|\\hat{p}=p) - p|].\n\\end{split}\n\\end{equation}",
            "eq:5": "\\begin{equation}\n\\label{eqn:optimization}\n\\begin{split}\n\\hat{\\theta} = \\arg \\min_{\\theta \\in \\Theta} \\mathcal{L}(\\mathcal{V}_{train};\\theta)\n\\end{split}\n\\end{equation}",
            "eq:6": "\\begin{equation}\n\\label{eqn: confidence interval}\n\\begin{split}\n\\mathcal{C}_\\alpha(v;\\hat{\\theta}) = [\\mathcal{Q}_\\alpha(\\{f(v; \\hat{\\theta_{-i}}) - r_i\\}), \\mathcal{Q}_{1-\\alpha}(\\{f(v; \\hat{\\theta_{-i}}) + r_i\\})]\n\\end{split}\n\\end{equation}",
            "eq:7": "\\begin{equation}\n\\label{eqn:influence_function}\n\\begin{split}\n\\hat{\\theta_{i,\\epsilon}} =& \\arg \\min_{\\theta \\in \\Theta} \\mathcal{L}(\\mathcal{V}_{train};\\theta) + \\epsilon \\mathcal{L}(i;\\theta) \\\\\n& \\approx \\hat{\\theta_{i}} + \\epsilon (\\mathcal{H}^{-1}_{\\hat{\\theta}}\\nabla_{\\theta}L(i;\\hat{\\theta}))\n\\end{split}\n\\end{equation}",
            "eq:8": "\\begin{equation}\n\\label{eqn:uncertainty}\n\\begin{split}\n\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta}) =& \\mathcal{Q}_\\alpha(\\{f(v; \\hat{\\theta_{-i}}) - r_i\\}) \\\\\n\\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta}) =& \\mathcal{Q}_{1-\\alpha}(\\{f(v; \\hat{\\theta_{-i}}) + r_i\\}) \\\\\nuncer(v;\\hat{\\theta})=& \\frac{\\mathcal{C}_{\\alpha}^-(v;\\hat{\\theta}) + \\mathcal{C}_{\\alpha}^+(v;\\hat{\\theta})}{2}\n\\end{split}\n\\end{equation}",
            "eq:9": "\\begin{equation}\n\\label{eqn:ice}\n\\begin{split}\nICE(v) = |uncer(v;\\hat{\\theta}) - conf(v;\\hat{\\theta})|\n\\end{split}\n\\end{equation}",
            "eq:10": "\\begin{equation}\n\\label{eqn:ece}\n\\begin{split}\nEICE =\\sum_{v \\in \\mathcal{V}}\\frac{1}{N} ICE (v) = \\sum_{v \\in \\mathcal{V}}\\frac{1}{N} |uncer(v;\\hat{\\theta}) - conf(v;\\hat{\\theta})|\n\\end{split}\n\\end{equation}",
            "eq:11": "\\begin{equation} \n\\label{eqn:loss_nll}\n\\begin{split}\n\\mathcal{L}_{CE} = - \\frac{1}{|V_{train}|}\\sum_{i=1}^{|V_{train}|}\\sum_{c=1}^{C} y_{i}log p_{i}\n\\end{split}\n\\end{equation}",
            "eq:12": "\\begin{equation} \n\\small\n\\label{eqn:loss_iece}\n\\begin{split}\n\\mathcal{L}_{EICE} = \\frac{1}{|V_{train}|}\\sum_{i=1}^{|V_{train}|} ICE(i)\n\\end{split}\n\\end{equation}",
            "eq:13": "\\begin{equation} \n\\small\n\\label{eqn: loss}\n\\begin{split}\n\\mathcal{L} = (1-\\lambda) \\mathcal{L}_{CE} + \\lambda \\mathcal{L}_{EICE}\n\\end{split}\n\\end{equation}"
        },
        "git_link": "https://github.com/wulongfeng/CaliRare"
    }
}